{"version":3,"sources":["components/common/CateLoading.tsx","components/board/BoardSearchComponent.tsx","components/common/ListLoading.tsx","components/board/grid/PhotoGrid.tsx","lib/client.ts","lib/api.ts","containers/board/ScrollTop.tsx","components/board/BoardListComponent.tsx","modules/loading.tsx","lib/createRequestSaga.ts","modules/boardSaga.tsx","containers/board/BoardListContainer.tsx","components/common/MainHeader.tsx","modules/selector.tsx","modules/auth.tsx","containers/common/MainHeaderContainer.tsx","layout/MainLayout.tsx","pages/board/list.tsx","components/board/dropzone/Layout.tsx","components/board/dropzone/Input.tsx","components/board/dropzone/utils.ts","components/board/dropzone/Preview.tsx","components/board/dropzone/SubmitButton.tsx","components/board/dropzone/Dropzone.tsx","components/board/BoardRegFormComponent.tsx","containers/board/BoardRegContainer.tsx","pages/board/regForm.tsx","components/board/BoardUpdateComponent.tsx","containers/board/BoardUpdateContainer.tsx","pages/board/update.tsx","pages/home/login.tsx","containers/auth/SignInContainer.tsx","pages/auth/SignInPage.tsx","routes/index.tsx","modules/category.tsx","modules/index.tsx","serviceWorker.js","index.tsx"],"names":["Skeleton","className","StyledTreeItem","withStyles","theme","createStyles","iconContainer","opacity","group","marginLeft","paddingLeft","borderLeft","fade","palette","text","primary","props","TreeItem","useStyles","makeStyles","root","height","flexGrow","maxWidth","icon","marginRight","spacing","heroContent","backgroundColor","background","paper","padding","paddingTop","heroButtons","marginTop","cardGrid","paddingBottom","card","display","flexDirection","cardMedia","cardContent","footer","useSearchStyles","textAlign","color","secondary","ButtonStyles","border","borderRadius","boxShadow","margin","MyButton","other","buttonStyle","Button","useDateStyles","container","flexWrap","textField","width","Album","classes","searchStyle","dateStyle","React","useState","checkedA","checkedB","checkedC","checkedD","checkedE","condition","setCondition","keyword","setKeyword","searchKeywordChange","useCallback","e","target","value","tag","length","map","t","title","tagName","year","tagId","tagLength","trees","categorys","arr","arrayToTree","dataField","renderTrees","nodes","nodeId","id","label","custom","Array","isArray","children","node","Category","category","useEffect","useTreeStyles","treeClass","setCategory","Set","checkedItems","setCheckedItems","selectTag","event","checked","add","name","has","delete","startDate","setStartDate","endDate","setEndDate","selectStartDate","d","valueAsDate","farseDate","format","selectEndDate","order","setOrder","orderChange","console","log","onOrder","from","onSearch","search","Fragment","CssBaseline","Toolbar","style","Container","Typography","component","variant","align","gutterBottom","Grid","item","xs","fontSize","Paper","Select","labelId","onChange","MenuItem","inputProps","isLoading","fill","_","i","TreeView","onNodeToggle","nodeIds","persist","onNodeSelect","defaultSelected","defaultCollapseIcon","defaultExpandIcon","defaultEndIcon","expanded","TextField","type","InputLabelProps","shrink","isTagLoading","marginBottom","tLength","tagCount","FormControlLabel","control","Checkbox","String","Box","onClick","href","flex","totalPage","ListLoading","PhotoGrid","photo","data","p","index","pLength","num","fileLength","position","src","thumbPath","alt","fileKinds","mediaType","GirdLists","client","axios","create","CancelToken","signIn","userId","password","post","getMyInfo","get","categoryList","addAttach","formData","a","headers","addBigAttach","source","list","bigFileLength","newName","Math","random","toString","substr","flag","fileLevel","fileName","bNo","numberOfSlices","bigFile","file","size","params","then","res","result","catch","push","write","join","update","put","searchParam","strDate","tagList","allPage","fileDownload","fileNo","originName","responseType","fileDown","boardDelete","barStyles","bottom","right","ScrollTop","window","barStyle","trigger","useScrollTrigger","undefined","disableHysteresis","threshold","Zoom","in","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","Scroll","Fab","aria-label","appBar","Transition","forwardRef","ref","Slide","direction","useTableStyles","table","minWidth","BoardList","tableClasses","setbNo","openModal","setDeleteOpen","rand","round","shadows","useModalStyles","top","left","transform","diaOpen","setDiaOpen","handleClickOpen","onDetail","handleClickClose","api","useTheme","useMediaQuery","breakpoints","down","location","deleteOpen","dialogClose","setAllPage","getAllPage","temp","Dialog","fullScreen","open","onClose","TransitionComponent","AppBar","IconButton","edge","board","List","autoPlay","animation","indicators","navButtonsAlwaysVisible","fileList","protocol","hostname","port","controls","TableContainer","Table","TableHead","TableRow","TableCell","path","TableBody","scope","cateList","mName","enrollDate","substring","prettyBytes","bTag","isSearchLoading","boards","sm","md","Card","CardActionArea","fileListLength","CardContent","mId","cateName","CardActions","boardUpdate","myInfo","isMoreLoading","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","START_LOADING","END_LOADING","startLoading","createAction","actionType","endLoading","loading","handleActions","state","action","payload","createRequestSaga","request","CALL_SUCCESS","CALL_FAILURE","callSuccess","callFailure","call","response","boardSaga","FETCH_ONE","fetchOne","boardNo","fetchOneSaga","TAG","tagSaga","FETCH_LIST","fetchList","page","fetchListSaga","FETCH_MORE_LIST","fetchMoreList","param","fetchMoreListSaga","FETCH_SEARCH_LIST","fetchSearchList","fetchSearchListSaga","TOTAL_PAGE","getTotalPage","totalPageSaga","TAG_LIST","tagListSaga","FETCH_CATE_LIST","fetchCateList","fetchCateListSaga","ADD_ATTACH","attach","ADD_BIG_ATTACH","takeLatest","searchCate","searchStrDate","searchEndDate","searchTagList","searchCondition","searchKeyword","searchOrder","error","moreBoards","searchBoards","newAttach","attachments","concat","newBigAttach","boardItem","boardItems","savedToken","Cookies","cpage","BoardListContainer","dispatch","useDispatch","setSearch","useSelector","auth","apiPage","all","boardDetail","isCateLoading","isListLoading","isMoreListLoading","pageList","addEventListener","handleScroll","parseInt","scrollHeight","documentElement","scrollTop","clientHeight","ceil","b","selectTagList","removeEventListener","MainHeader","isAuthorized","onLogout","sideClasses","menuButton","useSideStyles","useLocation","noWrap","getAuthorized","createSelector","accessToken","authList","loginSaga","checkMyInfoSaga","authSaga","SET_ACCESS_TOKEN","LOGIN","SET_MY_INFO","CHECK_MY_INFO","setAccessToken","login","setMyInfo","checkMyInfo","SET_ERROR_MSG","setErrorMsg","errorMsg","authorization","defaults","common","Authorization","set","expires","alert","loginFailure","connect","remove","MainLayout","BoardRegisterPage","Layout","input","previews","submitButton","dropzoneProps","files","maxFiles","extra","Input","labelClassName","labelWithFilesClassName","labelStyle","labelWithFilesStyle","getFilesFromEvent","accept","multiple","disabled","content","withFilesContent","onFiles","chosenFiles","accepts","mimeType","baseMimeType","replace","split","trim","some","charAt","toLowerCase","endsWith","resolveValue","args","defaultClassNames","dropzone","dropzoneActive","dropzoneReject","dropzoneDisabled","inputLabel","inputLabelWithFiles","preview","previewImage","submitButtonContainer","items","dt","dataTransfer","prototype","slice","iconByFn","cancel","backgroundImage","restart","Preview","this","imageClassName","imageStyle","fileWithMeta","meta","percent","previewUrl","status","duration","validationError","isUpload","canCancel","canRemove","canRestart","minSizeBytes","l","n","toFixed","formatBytes","seconds","date","Date","setSeconds","dateString","toISOString","formatDuration","max","includes","PureComponent","SubmitButton","buttonClassName","onSubmit","_disabled","f","filter","Dropzone","mounted","dragTimeoutId","forceUpdate","defaultGetFilesFromEvent","getDataTransferItemsFromEvent","handleDragEnter","preventDefault","stopPropagation","dragged","setState","active","handleDragOver","clearTimeout","handleDragLeave","setTimeout","handleDrop","handleFiles","handleDropDisabled","handleChangeStatus","onChangeStatus","handleSubmit","handleCancel","xhr","abort","handleRemove","findIndex","URL","revokeObjectURL","splice","handleRestart","getUploadParams","uploadFile","forEach","handleFile","getTime","current","scroll","lastModified","maxSizeBytes","autoUpload","validate","uploadedDate","lastModifiedDate","generatePreview","isImage","startsWith","isAudio","isVideo","objectUrl","createObjectURL","fileCallbackToPromise","fileObj","Promise","race","resolve","HTMLImageElement","onload","onloadedmetadata","reject","audio","Audio","video","createElement","videoWidth","videoHeight","stack","url","method","body","fields","extraMeta","XMLHttpRequest","FormData","Object","keys","field","append","setRequestHeader","header","upload","loaded","total","readyState","timeout","send","createRef","initialFiles","prevProps","inputContent","inputWithFilesContent","submitButtonDisabled","submitButtonContent","classNames","styles","addClassNames","InputComponent","PreviewComponent","SubmitButtonComponent","LayoutComponent","resolvedClassNames","resolvedStyles","entries","key","mergeStyles","dropzoneClassName","dropzoneActiveClassName","dropzoneRejectClassName","dropzoneDisabledClassName","inputClassName","inputLabelClassName","inputLabelWithFilesClassName","previewClassName","submitButtonContainerClassName","submitButtonClassName","dropzoneStyle","dropzoneActiveStyle","dropzoneRejectStyle","dropzoneDisabledStyle","inputStyle","inputLabelStyle","inputLabelWithFilesStyle","previewStyle","submitButtonContainerStyle","submitButtonStyle","InputDefault","PreviewDefault","SubmitButtonDefault","LayoutDefault","Boolean","onDragEnter","onDragOver","onDragLeave","onDrop","onCancelFile","onRemoveFile","onRestartFile","Component","defaultProps","Number","MAX_SAFE_INTEGER","setTitle","setFile","setTag","setOpen","handleClose","tagOnChange","titleOnChange","validation","setValidation","fileUpload","setLoading","setLoad","onRegister","chunkSize","startByte","onAddAttach","onAddBigAttach","treeClasses","upFile","load","zIndex","fullWidth","autoFocus","placeholder","withRouter","fileSize","rows","setRows","tags","defaultValue","setFiles","deleteFileNo","setDeleteFileNo","deleteFile","handleClickFileOpen","dFile","row","handleFileClose","fileUpdate","onUpdate","fileOpen","setFileOpen","cateId","multiSelect","BoardUpdateContainer","BoardUpdatePage","match","alignItems","avatar","main","form","submit","SignInForm","onSignIn","setUserId","setPassword","handleChangeUserId","handleChangePassword","idRef","useRef","pwdRef","currentEl","focus","Avatar","required","autoComplete","inputRef","history","SignInPage","RouterPaths","Root","exact","LoginPage","BoardRegForm","BoardUpdate","categorySaga","rootSaga","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","loadUser","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e777410b.chunk.js","sourcesContent":["import \"./Skeleton.css\";\r\n\r\nimport React from \"react\";\r\n\r\nconst Skeleton = () => {\r\n  return (\r\n      <div className=\"skeleton-info\">\r\n        <p className=\"skeleton-name\" />\r\n        <p className=\"skeleton-name\" />\r\n        <p className=\"skeleton-name\" />\r\n        <p className=\"skeleton-name\" />\r\n        <p className=\"skeleton-name\" />\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Skeleton;\r\n","import React, { useEffect, useState, useRef, useCallback } from 'react';\nimport Button, { ButtonProps as MuiButtonProps } from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { fade, withStyles, Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport TreeView from '@material-ui/lab/TreeView';\nimport TreeItem, { TreeItemProps } from '@material-ui/lab/TreeItem';\nimport TextField from '@material-ui/core/TextField';\nimport TrendingFlatIcon from '@material-ui/icons/TrendingFlat';\nimport Checkbox, { CheckboxProps } from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { arrayToTree } from 'performant-array-to-tree'\nimport { format } from 'fecha';\nimport SvgIcon, { SvgIconProps } from '@material-ui/core/SvgIcon';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport Loading from \"../../components/common/CateLoading\";\nimport DateRangeIcon from '@material-ui/icons/DateRange';\nimport ReactLoading from 'react-loading';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CategoryIcon from '@material-ui/icons/Category';\nimport DehazeIcon from '@material-ui/icons/Dehaze';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from '@material-ui/core/Input';\nimport SearchIcon from '@material-ui/icons/Search';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\n/***\n * 트리 스타일\n */\nfunction MinusSquare(props: SvgIconProps) {\n    return (\n        <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\n            <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 11.023h-11.826q-.375 0-.669.281t-.294.682v0q0 .401.294 .682t.669.281h11.826q.375 0 .669-.281t.294-.682v0q0-.401-.294-.682t-.669-.281z\" />\n        </SvgIcon>\n    );\n}\n\nfunction PlusSquare(props: SvgIconProps) {\n    return (\n        <SvgIcon fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\n            <path d=\"M22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0zM17.873 12.977h-4.923v4.896q0 .401-.281.682t-.682.281v0q-.375 0-.669-.281t-.294-.682v-4.896h-4.923q-.401 0-.682-.294t-.281-.669v0q0-.401.281-.682t.682-.281h4.923v-4.896q0-.401.294-.682t.669-.281v0q.401 0 .682.281t.281.682v4.896h4.923q.401 0 .682.281t.281.682v0q0 .375-.281.669t-.682.294z\" />\n        </SvgIcon>\n    );\n}\n\nfunction CloseSquare(props: SvgIconProps) {\n    return (\n        <SvgIcon className=\"close\" fontSize=\"inherit\" style={{ width: 14, height: 14 }} {...props}>\n            <path d=\"M17.485 17.512q-.281.281-.682.281t-.696-.268l-4.12-4.147-4.12 4.147q-.294.268-.696.268t-.682-.281-.281-.682.294-.669l4.12-4.147-4.12-4.147q-.294-.268-.294-.669t.281-.682.682-.281.696 .268l4.12 4.147 4.12-4.147q.294-.268.696-.268t.682.281 .281.669-.294.682l-4.12 4.147 4.12 4.147q.294.268 .294.669t-.281.682zM22.047 22.074v0 0-20.147 0h-20.12v0 20.147 0h20.12zM22.047 24h-20.12q-.803 0-1.365-.562t-.562-1.365v-20.147q0-.776.562-1.351t1.365-.575h20.147q.776 0 1.351.575t.575 1.351v20.147q0 .803-.575 1.365t-1.378.562v0z\" />\n        </SvgIcon>\n    );\n}\n\nconst StyledTreeItem = withStyles((theme: Theme) =>\n    createStyles({\n        iconContainer: {\n            '& .close': {\n                opacity: 0.3,\n            },\n        },\n        group: {\n            marginLeft: 7,\n            paddingLeft: 18,\n            borderLeft: `1px dashed ${fade(theme.palette.text.primary, 0.4)}`,\n        },\n    }),\n)((props: TreeItemProps) => <TreeItem {...props} />);\n\nconst useTreeStyles = makeStyles(\n    createStyles({\n        root: {\n            height: 264,\n            flexGrow: 1,\n            maxWidth: 400,\n        },\n    }),\n);\n\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\ninterface Props {\n    window?: () => Window;\n    children: React.ReactElement;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    heroContent: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(0, 6),\n        paddingTop: theme.spacing(8),\n    },\n    heroButtons: {\n        marginTop: theme.spacing(4),\n    },\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(6),\n    },\n}));\n\nconst useSearchStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        paper: {\n            padding: theme.spacing(2),\n            textAlign: 'center',\n            color: theme.palette.text.secondary,\n        },\n    }),\n);\n\ninterface ButtonProps {\n    color: 'red' | 'blue';\n}\n\n\nconst ButtonStyles = makeStyles({\n    root: {\n        background: (props: ButtonProps) =>\n            props.color === 'red'\n                ? 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\n                : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n        border: 0,\n        borderRadius: 3,\n        boxShadow: (props: ButtonProps) =>\n            props.color === 'red'\n                ? '0 3px 5px 2px rgba(255, 105, 135, .3)'\n                : '0 3px 5px 2px rgba(33, 203, 243, .3)',\n        color: 'white',\n        height: 48,\n        padding: '0 30px',\n        margin: 8,\n    },\n});\n\nfunction MyButton(props: ButtonProps & Omit<MuiButtonProps, keyof ButtonProps>) {\n    const { color, ...other } = props;\n    const buttonStyle = ButtonStyles(props);\n    return <Button className={buttonStyle.root} {...other} />;\n}\n\nconst useDateStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        textField: {\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n            width: 200,\n        },\n    }),\n);\n\n\nexport default function Album(\n    props: any\n) {\n\n    const classes = useStyles();\n    const searchStyle = useSearchStyles();\n    const dateStyle = useDateStyles();\n\n    const [state, setState] = React.useState({\n        checkedA: false,\n        checkedB: false,\n        checkedC: true,\n        checkedD: false,\n        checkedE: false,\n    });\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n    };\n\n\n    // 검색어\n    const [condition, setCondition] = useState('title');\n    const searchChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        setCondition(event.target.value as string);\n    };\n    const [keyword, setKeyword] = useState('');\n    const searchKeywordChange = useCallback((e) => {\n        setKeyword(e.target.value);\n    }, []);\n\n    interface tag {\n        tagName: string,\n        tagId: number,\n        tagLength?: string,\n        tagCount?: number,\n    }\n\n    interface tagList {\n        title: string,\n        year?: number,\n        tagLength?: string,\n        tagCount?: number,\n    }\n\n    let tags: tagList[] = [{ title: '' }];\n\n    if (props.tag != null && props.tag.length > 0) {\n        tags = props.tag.map((t: tag) => {\n            return {\n                title: t.tagName,\n                year: t.tagId,\n                tagLength: t.tagName + \"()\",\n            }\n        })\n    }\n\n\n    const gStyle = {\n        background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n    }\n\n    let trees: any[] = [{}];\n\n    if (props.categorys.length != 0) {\n        const arr = props.categorys;\n        trees = arrayToTree(arr, { dataField: null })\n    }\n\n    interface TreeViews {\n        children?: TreeViews[];\n        custom: string;\n        id: string;\n    }\n\n    interface CategoryProps {\n        category: TreeViews\n    }\n\n    const renderTrees = (nodes: TreeViews) => (\n        <StyledTreeItem key={nodes.id} nodeId={nodes.id} label={nodes.custom}>\n            {Array.isArray(nodes.children) ? nodes.children.map((node) => renderTrees(node)) : null}\n        </StyledTreeItem>\n    );\n\n    const Category = ({ category }: CategoryProps) => {\n        useEffect(() => {\n\n        }, [category]);\n        return renderTrees(category);\n    }\n\n    const useTreeStyles = makeStyles({\n        root: {\n            flexGrow: 1,\n            textAlign: 'left',\n        },\n    });\n\n    const treeClass = useTreeStyles();\n\n\n    const [expanded, setExpanded] = useState([]);\n    const [selected, setSelected] = useState([]);\n\n    const handleToggle = (event: any, nodeIds: string[]) => {\n        event.persist()\n    };\n\n    /**\n     * 검색\n     */\n    // 카테고리 선택\n    const [category, setCategory] = useState('');\n    const handleNodeSelect = (event: any, nodeId: React.SetStateAction<string>) => {\n        setCategory(nodeId);\n    };\n\n    // 태그 선택\n    const [selectTagList, setSelectTagList] = useState([]);\n    // const selectTag = useCallback((event: object, value: any, reason: string) => {\n    //     setSelectTagList(value);\n    // }, [])\n\n    const [checkedItems, setCheckedItems] = useState(new Set());\n    const checkedItemHandler = (id: string, isChecked: boolean) => {\n        if (isChecked) {\n            checkedItems.add(id);\n            setCheckedItems(checkedItems);\n        } else if (!isChecked && checkedItems.has(id)) {\n            checkedItems.delete(id);\n            setCheckedItems(checkedItems);\n        }\n    };\n\n    const [bChecked, setChecked] = useState(false);\n    const selectTag = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n        if (event.target.checked) setCheckedItems(checkedItems.add(event.target.name));\n        else if (!event.target.checked && checkedItems.has(event.target.name)) checkedItems.delete(event.target.name);\n    }, [])\n\n    // 날짜 선택\n    const [startDate, setStartDate] = useState(\"\");\n    const [endDate, setEndDate] = useState(\"\");\n\n    const selectStartDate = useCallback((e: any) => {\n        const d: Date = e.target.valueAsDate;\n        const farseDate: string = format(d, 'YYYYMMDD000000');\n        setStartDate(farseDate);\n    }, [])\n\n    const selectEndDate = useCallback((e: any) => {\n        const d: Date = e.target.valueAsDate;\n        const farseDate: string = format(d, 'YYYYMMDD235959');\n        setEndDate(farseDate);\n    }, [])\n\n    const [order, setOrder] = useState(\"desc\");\n\n    const orderChange = useCallback((event: React.ChangeEvent<{ value: unknown }>) => {\n        setOrder(event.target.value as string);\n        console.log(event.target.value)\n\n    }, []);\n\n\n    useEffect(() => {\n        onOrder();\n    }, [order])\n\n    const onOrder = useCallback(() => {\n        const arr = Array.from(checkedItems);\n        props.onSearch(category, arr, startDate, endDate, condition, keyword, order)\n    }, [category, checkedItems, startDate, endDate, condition, keyword, order])\n\n    const search = useCallback(() => {\n        const arr = Array.from(checkedItems);\n        props.onSearch(category, arr, startDate, endDate, condition, keyword, order)\n    }, [category, checkedItems, startDate, endDate, condition, keyword, order])\n\n    const treeClasses = useTreeStyles();\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <Toolbar style={{ display: \"inline\" }} id=\"back-to-top-anchor\" />\n            <main>\n                {/* Hero unit */}\n                <div className={classes.heroContent}>\n                    <Container maxWidth=\"sm\">\n                        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n\n                        </Typography>\n                    </Container>\n                    <Container maxWidth=\"lg\">\n                        <Grid container spacing={3}>\n                            <Grid item xs={2}>\n                                <p style={{ fontSize: \"14pt\" }}><SearchIcon />&nbsp;&nbsp;키워드</p>\n                            </Grid>\n                            <Grid item xs={10}>\n                                <Paper className={searchStyle.paper}>\n                                    <Select\n                                        labelId=\"demo-simple-select-label\"\n                                        id=\"demo-simple-select\"\n                                        value={condition}\n                                        onChange={searchChange}\n                                        style={{ width: \"15%\" }}\n                                    >\n                                        <MenuItem value={\"title\"}>제목</MenuItem>\n                                        <MenuItem value={\"writer\"}>작성자 아이디</MenuItem>\n                                    </Select>\n                                    <Input\n                                        style={{ width: \"65%\" }}\n                                        inputProps={{ 'aria-label': 'description' }}\n                                        onChange={searchKeywordChange}\n                                    />\n                                </Paper>\n                            </Grid>\n\n\n                            <Grid item xs={2}>\n                                <p style={{ fontSize: \"14pt\" }}><FormatListBulletedIcon></FormatListBulletedIcon> &nbsp;&nbsp; 카테고리</p>\n                            </Grid>\n                            <Grid item xs={10}>\n                                <Paper className={searchStyle.paper}>\n                                    {props.isLoading && new Array(1).fill(1).map((_, i) => {\n                                        return <Loading />;\n                                    })}\n                                    {!props.isLoading && props.categorys.length > 0 && (\n                                        <TreeView\n                                            onNodeToggle={handleToggle}\n                                            onNodeSelect={handleNodeSelect}\n                                            defaultSelected={props.categorys && props.categorys[0].id}\n                                            className={treeClass.root}\n                                            defaultCollapseIcon={<FolderIcon />}\n                                            defaultExpandIcon={<FolderIcon />}\n                                            defaultEndIcon={<FolderIcon />}\n                                            expanded={props.categorys.map((group: TreeViews) => group.id + '')}\n                                        >\n                                            <div>\n                                                {trees.map((category: TreeViews) => {\n                                                    return <Category key={category.id} category={category} />\n                                                })}\n                                            </div>\n                                        </TreeView>\n                                    )}\n                                </Paper>\n                            </Grid>\n                            <Grid item xs={2}>\n                                <p style={{ fontSize: \"14pt\" }}><DateRangeIcon />&nbsp;&nbsp; 작성 날짜</p>\n                            </Grid>\n                            <Grid item xs={10}>\n                                <Paper className={searchStyle.paper}>\n                                    <TextField\n                                        id=\"date\"\n                                        type=\"date\"\n                                        className={dateStyle.textField}\n                                        onChange={selectStartDate}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                    <TrendingFlatIcon />\n                                    <TextField\n                                        id=\"date\"\n                                        type=\"date\"\n                                        className={dateStyle.textField}\n                                        onChange={selectEndDate}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                </Paper>\n                            </Grid>\n                            <Grid item xs={2}>\n                                <p style={{ fontSize: \"14pt\" }}><LocalOfferIcon />&nbsp;&nbsp;해시태그</p>\n                            </Grid>\n                            <Grid item xs={10}>\n                                <Paper className={searchStyle.paper} style={{ textAlign: \"left\" }}>\n                                    {props.isTagLoading &&\n                                        <div style={{ marginLeft: \"50%\", marginTop: \"5%\", marginBottom: \"5%\" }}>\n                                            <ReactLoading type=\"spin\" color=\"black\" height={'50px'} width={'50px'} />\n                                        </div>}\n                                    {!props.isTagLoading && !!props.tag && props.tag.length > 0 && props.tag.map((t: tag) => {\n                                        const tLength = t.tagName + \" (\" + t.tagCount + \")\";\n                                        return <FormControlLabel\n                                            control={<Checkbox onChange={selectTag} name={String(t.tagId)} />}\n                                            label={tLength}\n                                        />\n                                    })\n                                    }\n                                </Paper>\n                            </Grid>\n                            <Grid item xs={12} style={{ marginBottom: \"50px\" }} >\n                                <Box textAlign='center'>\n                                    <MyButton color=\"red\" onClick={search}>검색</MyButton>\n                                    <a href=\"/board/regForm\"><MyButton color=\"blue\">새 게시글 등록</MyButton></a>\n                                </Box>\n                            </Grid>\n                        </Grid>\n                    </Container>\n                </div>\n            </main>\n            <div className={classes.heroContent}>\n                <Container maxWidth=\"lg\">\n                    <div style={{ display: \"flex\" }}>\n                        <span style={{ flex: \"1\" }}>총 {props.totalPage && props.totalPage}건의 미디어가 출력됩니다.</span>\n                        <span style={{ flex: \"1\", textAlign: \"right\" }}>\n                            <Select\n                                labelId=\"demo-simple-select-outlined-label\"\n                                id=\"demo-simple-select-outlined\"\n                                value={order}\n                                onChange={orderChange}\n                                label=\"Age\"\n                            >\n                                <MenuItem value={\"desc\"}>최근 날짜순</MenuItem>\n                                <MenuItem value={\"asc\"}>오래된 날짜순</MenuItem>\n                            </Select>\n                        </span>\n                    </div>\n                </Container>\n            </div>\n\n        </React.Fragment >\n    );\n}","import \"./Skeleton.css\";\r\nimport Card from '@material-ui/core/Card';\r\nimport React from \"react\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\n\r\nconst ListLoading = () => {\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"bar\">\r\n          <div className=\"indicator\" />\r\n        </div>\r\n        <div className=\"wrapper\" style={{ marginRight: \"3%\" }}>\r\n          <div className=\"list\" />\r\n        </div>\r\n        <div className=\"bar\">\r\n          <div className=\"indicator\" />\r\n        </div>\r\n        <div className=\"wrapper\" style={{ marginRight: \"3%\" }}>\r\n          <div className=\"list\" />\r\n        </div>\r\n        <div className=\"bar\">\r\n          <div className=\"indicator\" />\r\n        </div>\r\n        <div className=\"wrapper\">\r\n          <div className=\"list\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"bar\">\r\n          <div className=\"indicator\" />\r\n        </div>\r\n        <div className=\"wrapper\" style={{ marginRight: \"3%\" }}>\r\n          <div className=\"list\" />\r\n        </div>\r\n        <div className=\"bar\">\r\n          <div className=\"indicator\" />\r\n        </div>\r\n        <div className=\"wrapper\" style={{ marginRight: \"3%\" }}>\r\n          <div className=\"list\" />\r\n        </div>\r\n        <div className=\"bar\">\r\n          <div className=\"indicator\" />\r\n        </div>\r\n        <div className=\"wrapper\">\r\n          <div className=\"list\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"container\">\r\n        <div className=\"bar\">\r\n          <div className=\"indicator\" />\r\n        </div>\r\n        <div className=\"wrapper\" style={{ marginRight: \"3%\" }}>\r\n          <div className=\"list\" />\r\n        </div>\r\n        <div className=\"bar\">\r\n          <div className=\"indicator\" />\r\n        </div>\r\n        <div className=\"wrapper\" style={{ marginRight: \"3%\" }}>\r\n          <div className=\"list\" />\r\n        </div>\r\n        <div className=\"bar\">\r\n          <div className=\"indicator\" />\r\n        </div>\r\n        <div className=\"wrapper\">\r\n          <div className=\"list\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListLoading;","import React from 'react';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }),\n);\n\n/**\n * * 리스트에 출력되는 컨텐츠들을 그리드 모양으로 만든다\n * @param photo : 리스트 \n */\nfunction PhotoGrid(photo: any) {\n  const classes = useStyles();\n\n  /**\n   * * map 반복문을 돌려서 <Grid> 하나하나 만드는 메소드\n   * @param p : 리스트 i번째 객체, pLength : 리스트 길이, index : 인덱스\n   */\n  const GirdLists = (p: any, pLength: number, index: number) => {\n    let num: any = 0;\n    let height: any = \"300px\";\n\n    // 그리드 간격 정하기\n    // num = Grid 간격\n    // 12\n    // 6 6\n    // 4 4 4\n    if (pLength == 1) {\n      num = 12;\n    } else if (pLength == 2) {\n      num = 6;\n    } else if (pLength == 3) {\n      height = \"150px\";\n      if (index == 0) {\n        num = 12;\n      } else {\n        num = 6;\n      }\n    } else {\n      height = \"150px\";\n      if (index == 0) {\n        // 첫번째 인덱스일땐 12\n        num = 12;\n      } else {\n        num = 4;\n      }\n    }\n\n    // 그리드 모양 만들기\n    if (index === 3 && photo.fileLength != 4) {\n      return (\n        <Grid item xs={num}>\n          <div style={{ opacity: \"0.7\", position: \"absolute\", backgroundColor: \"gray\", color: \"white\", width: \"125px\", height: \"150px\", fontSize: \"20pt\" }}>\n            <div style={{ padding: \"25%\" }}>+ {photo.fileLength - 4}</div>\n          </div>\n          <img\n            src={p.thumbPath}\n            height={height}\n            width='100%'\n            alt=''\n          />\n        </Grid>\n      )\n    } else {\n      if (p.fileKinds === \"MEDIA\") {\n        if (p.mediaType === \"IMG\") {\n          return (\n            <Grid item xs={num}>\n              <img\n                src={p.thumbPath}\n                height={height}\n                width='100%'\n                alt=''\n              />\n            </Grid>\n          )\n        } else if (p.mediaType === 'VIDEO') {\n          return (\n            <Grid item xs={num}>\n              <img height={height} width='100%' src='/image/default/video_default.png'></img>\n            </Grid>\n          )\n        } else {\n          return (\n            <Grid item xs={num}>\n              <img height={height} width='100%' src='/image/default/audio_default.png'></img>\n            </Grid>\n          )\n        }\n      } else {\n        return (\n          <Grid item xs={num}>\n            <img height={height} width='100%' src='/image/default/file_default.png'></img>\n          </Grid>\n        )\n      }\n\n    }\n  }\n\n  return (\n    <>\n      <div className={classes.root}>\n        <Grid container spacing={1}>\n          {!!photo.data && photo.data.map((p: any, index: number) => GirdLists(p, photo.data.length, index))}\n        </Grid>\n      </div>\n    </>\n  );\n}\n\nexport default PhotoGrid;\n","import axios from 'axios';\r\n\r\n\r\nexport const client = axios.create({\r\n    // baseURL: 'http://localhost:8800'\r\n});\r\nexport const CancelToken = axios.CancelToken;\r\n\r\nexport default client;\r\n\r\n","import { delay } from \"redux-saga/effects\";\r\nimport { isThisTypeNode } from \"typescript\";\r\nimport { client, CancelToken } from \"./client\";\r\nimport fileDown from 'js-file-download'\r\n\r\nexport const signIn = (userId: string, password: string) => client.post(`/api/authenticate?username=${userId}&password=${password}`);\r\nexport const getMyInfo = () => client.get(\"/api/users/myinfo\");\r\n\r\nexport const categoryList = () => client.get(\"/api/category/list\");\r\n\r\nexport const addAttach = async (formData: any) => await client.post('/api/board/upload', formData, {\r\n  headers: {\r\n    'Content-Type': 'multipart/form-data'\r\n  },\r\n});\r\n\r\n\r\nconst source = CancelToken.source();\r\n\r\n/**\r\n *  대용량 파일 첨부\r\n * @param title \r\n * @param category \r\n * @param tag \r\n */\r\nexport const addBigAttach = async (list: Array<any>, bigFileLength: number) => {\r\n  let result;\r\n\r\n  // 랜덤 제목 초기값\r\n  let newName: string = Math.random().toString(36).substr(2, 11);\r\n  let flag: boolean = false;\r\n\r\n  for (let i: number = 0; i < list.length; i++) {\r\n    // 파일레벨이 변경될 때 마다(다른 파일이 전송됐을 때) 제목 바뀜\r\n    if (i != 0 && list[i].fileLevel != list[i - 1].fileLevel) {\r\n      newName = Math.random().toString(36).substr(2, 11);\r\n    }\r\n    // 마지막일 때\r\n    if ((i != list.length - 1\r\n      && list[i].fileLevel != list[i + 1].fileLevel)) {\r\n      flag = true;\r\n    } else {\r\n      flag = false;\r\n    }\r\n\r\n    if (i == list.length - 1) {\r\n      flag = true;\r\n    }\r\n\r\n    let fileName = list[i].fileName;\r\n    let bNo = String(list[i].bNo);\r\n    let fileLevel = list[i].fileLevel;\r\n    let numberOfSlices = list[i].numberOfSlices;\r\n    let bigFile = list[i].file;\r\n    let size = list[i].size;\r\n\r\n    await client.post('/api/board/bigFileUpload', bigFile,\r\n      {\r\n        params: {\r\n          fileName,\r\n          bNo,\r\n          fileLevel,\r\n          numberOfSlices,\r\n          newName,\r\n          flag,\r\n          size\r\n        },\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        },\r\n      }).then((res) => {\r\n        result = res\r\n      }).catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  let arr = [];\r\n  for (let i = 0; i < bigFileLength; i++) {\r\n    arr.push(result)\r\n  }\r\n\r\n  return arr\r\n}\r\n\r\n/**\r\n *  파일 첨부\r\n * @param title \r\n * @param category \r\n * @param tag \r\n */\r\nexport const write = (title: string, category: string, tag: any) =>\r\n  client.post(\"/api/board/write\", null,\r\n    {\r\n      params: {\r\n        title: title,\r\n        category: category,\r\n        tag: tag.join(\",\")\r\n      }\r\n    }).then((res) => {\r\n      return res.data.result\r\n    }).catch((e) => {\r\n      console.log(e);\r\n    });\r\n\r\n//  업데이트\r\nexport const update = (bNo: number, title: string, category: string, tag: string[], file: number[]) =>\r\n  client.put(`/api/board/update/${bNo}`, null, {\r\n    params: {\r\n      title: title,\r\n      category: category,\r\n      tag: tag.join(\",\"),\r\n      file: file.join(\",\")\r\n    }\r\n  })\r\n\r\n\r\nexport const fetchBoard = (bNo: number) => client.get(`/api/board/detail/${bNo}`);\r\n\r\nexport const fetchBoardList = (page: number) => client.get(\"/api/board/list\", {\r\n  params: {\r\n    page: page\r\n  }\r\n});\r\n\r\n\r\n// export const fetchBoardMoreList = (page : number,search:string) => client.get(\"/api/board/list\",{\r\n//   params : {\r\n//     page : page,\r\n//     search: search\r\n//   }\r\n// });\r\n\r\ninterface search {\r\n  page?: number,\r\n  category?: string,\r\n  strDate?: string,\r\n  endDate?: string\r\n  tagList?: string,\r\n  condition?: string,\r\n  keyword?: string,\r\n  order?: string,\r\n}\r\n\r\n/***\r\n * 페이징\r\n */\r\nexport const fetchBoardMoreList = (param: search) => client.get(\"/api/board/list\", {\r\n  params: {\r\n    page: param.page,\r\n    category: param.category,\r\n    strDate: param.strDate,\r\n    endDate: param.endDate,\r\n    tagList: param.tagList,\r\n    condition: param.condition,\r\n    keyword: param.keyword,\r\n    order: param.order\r\n  }\r\n});\r\n\r\n/***\r\n * 검색\r\n */\r\nexport const fetchBoardSearchList = (searchParam: search) => client.get(\"/api/board/list\", {\r\n  params: {\r\n    category: searchParam.category,\r\n    strDate: searchParam.strDate,\r\n    endDate: searchParam.endDate,\r\n    tagList: searchParam.tagList,\r\n    condition: searchParam.condition,\r\n    keyword: searchParam.keyword,\r\n    order: searchParam.order,\r\n  }\r\n});\r\n\r\n/***\r\n * 태그 리스트\r\n */\r\nexport const tagList = () => client.get(\"/api/tag/list\");\r\n\r\n/***\r\n * 전체 페이지\r\n */\r\nexport const totalPage = (searchParam: search) => client.get(\"/api/board/totalPage\", {\r\n  params: {\r\n    category: searchParam.category,\r\n    strDate: searchParam.strDate,\r\n    endDate: searchParam.endDate,\r\n    tagList: searchParam.tagList,\r\n    condition: searchParam.condition,\r\n    keyword: searchParam.keyword\r\n  }\r\n});\r\n\r\nexport const allPage = async () => await client.get(\"/api/board/totalPage\");\r\n\r\n/***\r\n * 파일 다운로드\r\n */\r\nexport const fileDownload = (fileNo: number, originName: string) => client.get(`/api/board/download/${fileNo}`, {\r\n  responseType: 'blob',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n}).then((res) => {\r\n  fileDown(res.data, originName);\r\n}).catch((e) => {\r\n  console.log(e);\r\n});\r\n\r\n/***\r\n * 태그 리스트\r\n */\r\nexport const tag = (bNo: number) => client.get(`/api/board/tag/${bNo}`);\r\n\r\n\r\n\r\n/***\r\n * 삭제\r\n */\r\nexport const boardDelete = (bNo: string) => client.delete(`/api/board/${bNo}`)\r\n\r\n","import React, { useEffect } from \"react\";\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Zoom from '@material-ui/core/Zoom';\nimport Fab from '@material-ui/core/Fab';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\n\ninterface Props {\n    window?: () => Window;\n    children: React.ReactElement;\n}\n\nconst barStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            position: 'fixed',\n            bottom: theme.spacing(2),\n            right: theme.spacing(2),\n        },\n    }),\n);\n\n\nfunction ScrollTop(props: Props) {\n    const { children, window } = props;\n    const barStyle = barStyles();\n    const trigger = useScrollTrigger({\n        target: window ? window() : undefined,\n        disableHysteresis: true,\n        threshold: 100,\n    });\n\n    const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n        const anchor = ((event.target as HTMLDivElement).ownerDocument || document).querySelector(\n            '#back-to-top-anchor',\n        );\n\n        if (anchor) {\n            anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\n        }\n    };\n\n    return (\n        <Zoom in={trigger}>\n            <div onClick={handleClick} role=\"presentation\" className={barStyle.root}>\n                {children}\n            </div>\n        </Zoom>\n    );\n}\n\n\nconst Scroll = (props: Props) => {\n    return <ScrollTop {...props}>\n        <Fab color=\"secondary\" size=\"large\" aria-label=\"scroll back to top\">\n            <KeyboardArrowUpIcon />\n        </Fab>\n    </ScrollTop>\n}\n\n\nexport default Scroll;","import React, { useState, useCallback, useEffect, } from 'react';\r\nimport Button, { ButtonProps as MuiButtonProps } from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Carousel from 'react-material-ui-carousel'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Box from '@material-ui/core/Box';\r\nimport ReactLoading from 'react-loading';\r\nimport Loading from \"../../components/common/ListLoading\";\r\n\r\nimport ReactPhotoGrid from '../board/grid/PhotoGrid'\r\n\r\n\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport 'lightbox-react/style.css';\r\nimport \"react-image-lightbox/style.css\"\r\n\r\nimport prettyBytes from 'pretty-bytes';\r\n\r\nimport \"./index.css\";\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport * as api from \"../../lib/api\";\r\nimport ScrollTop from '../../containers/board/ScrollTop';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { checkMyInfo } from '../../modules/auth';\r\n\r\n// slick 설정\r\nfunction Arrow(props: any) {\r\n    let className = props.type === \"next\" ? \"nextArrow\" : \"prevArrow\";\r\n    className += \" arrow\";\r\n    const char = props.type === \"next\" ? \">\" : \"<\";\r\n    return (\r\n        <span className={className} onClick={props.onClick} style={{ fontSize: \"50pt\" }}>\r\n            {char}\r\n        </span>\r\n    );\r\n}\r\n\r\nconst settings = {\r\n    dots: true,\r\n    infinite: false,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n\r\n}\r\n\r\n// style\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        appBar: {\r\n            position: 'relative',\r\n        },\r\n        title: {\r\n            marginLeft: theme.spacing(2),\r\n            flex: 1,\r\n        },\r\n        heroContent: {\r\n            backgroundColor: theme.palette.background.paper,\r\n            padding: theme.spacing(0, 6),\r\n            paddingBottom: theme.spacing(10)\r\n        },\r\n    }),\r\n);\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n    props: TransitionProps & { children?: React.ReactElement },\r\n    ref: React.Ref<unknown>,\r\n) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\ninterface ButtonProps {\r\n    color: 'red' | 'blue';\r\n}\r\n\r\nconst ButtonStyles = makeStyles({\r\n    root: {\r\n        background: (props: ButtonProps) =>\r\n            props.color === 'red'\r\n                ? 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\r\n                : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\r\n        border: 0,\r\n        borderRadius: 3,\r\n        boxShadow: (props: ButtonProps) =>\r\n            props.color === 'red'\r\n                ? '0 3px 5px 2px rgba(255, 105, 135, .3)'\r\n                : '0 3px 5px 2px rgba(33, 203, 243, .3)',\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n        margin: 8,\r\n    },\r\n});\r\n\r\nfunction MyButton(props: ButtonProps & Omit<MuiButtonProps, keyof ButtonProps>) {\r\n    const { color, ...other } = props;\r\n    const buttonStyle = ButtonStyles(props);\r\n    return <Button className={buttonStyle.root} {...other} />;\r\n}\r\n\r\nconst useTableStyles = makeStyles({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n});\r\n\r\nexport default function BoardList(props: any) {\r\n\r\n    const tableClasses = useTableStyles();\r\n    const [photoIndex, setPhotoIndex] = useState(0);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [bNo, setbNo] = useState(0);\r\n\r\n    //modal\r\n    const [open, setOpen] = useState(false);\r\n    const openModal = (bNo: number) => {\r\n        //props.onDetail(bNo);\r\n        setbNo(bNo);\r\n        setDeleteOpen(true);\r\n    };\r\n    const closeModal = () => {\r\n        setOpen(false);\r\n    };\r\n    function rand() {\r\n        return Math.round(Math.random() * 20) - 10;\r\n    }\r\n\r\n    function getModalStyle() {\r\n        const top = 50 + rand();\r\n        const left = 50 + rand();\r\n\r\n        return {\r\n            top: `${top}%`,\r\n            left: `${left}%`,\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n\r\n    const useModalStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            paper: {\r\n                position: 'absolute',\r\n                width: 400,\r\n                backgroundColor: theme.palette.background.paper,\r\n                border: '2px solid #000',\r\n                boxShadow: theme.shadows[5],\r\n                padding: theme.spacing(2, 4, 3),\r\n            },\r\n        }),\r\n    );\r\n\r\n    const modalClasses = useModalStyles();\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n\r\n    // dialog\r\n    const classes = useStyles();\r\n    const [diaOpen, setDiaOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = (bNo: number) => {\r\n        props.onDetail(bNo);\r\n        setbNo(bNo);\r\n        setDiaOpen(true);\r\n    };\r\n\r\n    const handleClickClose = () => {\r\n        setDiaOpen(false);\r\n    };\r\n\r\n    const fileDownload = async (fileNo: number, originName: string) => {\r\n        await api.fileDownload(fileNo, originName);\r\n    }\r\n\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const boardUpdate = (bNo: string) => {\r\n        document.location.href = \"/board/update/\" + bNo;\r\n    }\r\n\r\n    // delete\r\n    const boardDelete = async () => {\r\n        await api.boardDelete(String(bNo));\r\n        document.location.href = \"/board/list\";\r\n    }\r\n\r\n    //dialog\r\n    const [deleteOpen, setDeleteOpen] = React.useState(false);\r\n    const dialogOpen = () => {\r\n        setDeleteOpen(true);\r\n    };\r\n    const dialogClose = () => {\r\n        setDeleteOpen(false);\r\n    };\r\n\r\n    // order\r\n    const [age, setAge] = useState('');\r\n    const orderChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setAge(event.target.value as string);\r\n    };\r\n\r\n    const [allPage, setAllPage] = useState('');\r\n    const getAllPage = async () => {\r\n        const temp = await api.allPage();\r\n        setAllPage(temp.data.result)\r\n    }\r\n    useEffect(() => {\r\n        getAllPage();\r\n    }, [])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Dialog fullScreen open={diaOpen} onClose={handleClickClose} TransitionComponent={Transition}>\r\n                <AppBar className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleClickClose} aria-label=\"close\">\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            {!!props.board && props.board.title}\r\n                        </Typography>\r\n\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <List>\r\n                    <Container maxWidth=\"lg\" >\r\n                        {!!props.board &&\r\n                            <Carousel autoPlay={false}\r\n                                animation={\"slide\"}\r\n                                indicators={true}\r\n                                navButtonsAlwaysVisible={true}>\r\n                                {!!props.board.fileList && props.board.fileList.map((file: any, index: number) => (\r\n                                    <>\r\n                                        {file.fileKinds === 'MEDIA' ?\r\n                                            <>\r\n                                                {file.mediaType === 'IMG' ?\r\n                                                    <div style={{ textAlign: \"center\" }}>\r\n                                                        <img width={400} height={400} alt=\"\" src={`${window.location.protocol}//${window.location.hostname}:${window.location.port}${file.thumbPath}`} />\r\n                                                    </div>\r\n                                                    :\r\n                                                    <>\r\n                                                        {file.mediaType === 'VIDEO' ?\r\n                                                            <p style={{ textAlign: \"center\" }}>\r\n                                                                <video width={800} height={350} controls >\r\n                                                                    {/* <source src={`http://localhost:8800${file.path}`}></source> */}\r\n                                                                    <source src={`${window.location.protocol}//${window.location.hostname}:${window.location.port}/api/videos/${file.fileNo}`}></source>\r\n                                                                </video>\r\n                                                            </p>\r\n                                                            :\r\n                                                            <div style={{ marginTop: \"200px\", marginBottom: \"200px\", textAlign: \"center\" }}>\r\n                                                                <audio style={{ width: \"500px\" }} controls src={`${window.location.protocol}//${window.location.hostname}:${window.location.port}/api/videos/${file.fileNo}`} />\r\n                                                            </div>\r\n                                                        }\r\n                                                    </>\r\n                                                }\r\n                                            </>\r\n                                            :\r\n                                            <>\r\n                                                <div style={{ textAlign: \"center\" }}>\r\n                                                    <img width={400} height={400} alt=\"\" src='/image/default/file_default.png' />\r\n                                                </div>\r\n                                            </>\r\n                                        }\r\n                                        <br></br><br></br>\r\n                                        <Container maxWidth=\"md\">\r\n                                            <Paper>\r\n                                                <TableContainer>\r\n                                                    <Table className={tableClasses.table} size=\"small\" aria-label=\"a dense table\">\r\n                                                        <TableHead>\r\n                                                            <TableRow>\r\n                                                                <TableCell><p>파일 정보</p></TableCell>\r\n                                                                <TableCell>\r\n                                                                    {file.fileKinds === 'MEDIA' ?\r\n                                                                        <>\r\n                                                                            {file.mediaType === 'IMG' ?\r\n                                                                                <>이미지 파일 &nbsp;&nbsp;<a href={`${window.location.protocol}//${window.location.hostname}:${window.location.port}${file.path}`} target=\"_blank\"><span style={{ color: \"hotpink\" }}>원본보기</span></a></>\r\n                                                                                :\r\n                                                                                <>\r\n                                                                                    {file.mediaType === 'VIDEO' ?\r\n                                                                                        <>비디오 파일</>\r\n                                                                                        :\r\n                                                                                        <>\r\n                                                                                            {file.mediaType === 'AUDIO' ?\r\n                                                                                                <>오디오 파일</>\r\n                                                                                                :\r\n                                                                                                <>일반 파일</>\r\n                                                                                            }\r\n                                                                                        </>\r\n                                                                                    }\r\n                                                                                </>\r\n                                                                            }\r\n                                                                        </>\r\n                                                                        :\r\n                                                                        <>\r\n                                                                            <p>일반 파일</p>\r\n                                                                        </>\r\n                                                                    }\r\n                                                                </TableCell>\r\n                                                            </TableRow>\r\n                                                        </TableHead>\r\n                                                        <TableBody>\r\n                                                            <TableRow>\r\n                                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                                    <p>파일명</p>\r\n                                                                </TableCell>\r\n                                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                                    {file.originName}\r\n                                                                </TableCell>\r\n                                                            </TableRow>\r\n                                                            <TableRow>\r\n                                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                                    <p>카테고리</p>\r\n                                                                </TableCell>\r\n                                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                                    {!!props.board && props.board.cateList}\r\n                                                                </TableCell>\r\n                                                            </TableRow>\r\n                                                            <TableRow>\r\n                                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                                    <p>작성자</p>\r\n                                                                </TableCell>\r\n                                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                                    {props.board.mName}\r\n                                                                </TableCell>\r\n                                                            </TableRow>\r\n                                                            <TableRow>\r\n                                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                                    <p>등록날짜</p>\r\n                                                                </TableCell>\r\n                                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                                    {file.enrollDate.substring(0, 4)}-{file.enrollDate.substring(4, 6)}-{file.enrollDate.substring(6, 8)}\r\n                                                &nbsp;&nbsp;{file.enrollDate.substring(8, 10)}:{file.enrollDate.substring(10, 12)}:{file.enrollDate.substring(12, 14)}\r\n\r\n                                                                </TableCell>\r\n                                                            </TableRow>\r\n                                                            <TableRow>\r\n                                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                                    <p>크기</p>\r\n                                                                </TableCell>\r\n                                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                                    {prettyBytes(file.size)}\r\n                                                                </TableCell>\r\n                                                            </TableRow>\r\n                                                            <TableRow>\r\n                                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                                    <p>태그</p>\r\n                                                                </TableCell>\r\n                                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                                    {props.board.bTag ? <>#{props.board.bTag}</> : <>등록된 태그가 없습니다.</>}\r\n                                                                </TableCell>\r\n                                                            </TableRow>\r\n                                                            <TableRow>\r\n                                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                                    <p>다운로드</p>\r\n                                                                </TableCell>\r\n                                                                <TableCell component=\"th\" scope=\"row\">\r\n                                                                    <Button size=\"small\" color=\"primary\" onClick={() => fileDownload(file.fileNo, file.originName)}>\r\n                                                                        다운로드\r\n                                                                    </Button>\r\n                                                                </TableCell>\r\n                                                            </TableRow>\r\n                                                        </TableBody>\r\n                                                    </Table>\r\n                                                </TableContainer>\r\n                                            </Paper>\r\n                                        </Container>\r\n                                    </>\r\n                                )\r\n                                )}\r\n                            </Carousel>\r\n                        }\r\n                    </Container>\r\n                </List>\r\n            </Dialog>\r\n            <div className={classes.heroContent}>\r\n                <Container maxWidth=\"lg\">\r\n                    {/* <div style={{ display: \"flex\" }}>\r\n                        <span style={{ flex: \"1\" }}>총 {props.totalPage && props.totalPage}건의 미디어가 출력됩니다.</span>\r\n                        <span style={{ flex: \"1\", textAlign: \"right\" }}>\r\n\r\n                        </span>\r\n                    </div> */}\r\n                    <Grid container spacing={4} style={{ marginBottom: \"100px\" }} >\r\n                        {props.isLoading &&\r\n                            <Loading />\r\n                        }\r\n\r\n                        {props.isSearchLoading &&\r\n                            <Loading />\r\n                        }\r\n\r\n\r\n                        {!!props.boards && !props.isLoading && props.boards.map((board: any) => (\r\n                            <>\r\n\r\n                                <Grid item key={board} xs={12} sm={6} md={4}>\r\n                                    <Card>\r\n                                        <CardActionArea>\r\n                                            <a href=\"#\" onClick={() => handleClickOpen(board.bNo)}>\r\n                                                {!!board.fileList &&\r\n                                                    <div style={{ width: \"100%\", height: \"300px\" }}>\r\n                                                        <ReactPhotoGrid\r\n                                                            data={board.fileList.map((file: any, index: number) => (\r\n                                                                file\r\n                                                            ))}\r\n                                                            fileLength={board.fileListLength}\r\n                                                        />\r\n                                                    </div>\r\n                                                }\r\n                                                <CardContent >\r\n                                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                        <p>{board.title}</p>\r\n                                                    </Typography>\r\n                                                    <Typography>\r\n                                                        <p>{board.mName} ({board.mId})</p>\r\n                                                    </Typography>\r\n                                                    <Typography>\r\n                                                        <p>등록일 : {board.enrollDate.substring(0, 4)}-{board.enrollDate.substring(4, 6)}-{board.enrollDate.substring(6, 8)}\r\n                                                    &nbsp;&nbsp;{board.enrollDate.substring(8, 10)}:{board.enrollDate.substring(10, 12)}:{board.enrollDate.substring(12, 14)}\r\n                                                        </p>\r\n                                                    </Typography>\r\n                                                    <Typography>\r\n                                                        <p style={{ color: 'gray' }}>{board.cateName} </p>\r\n                                                    </Typography>\r\n                                                    <Typography>\r\n                                                        {board.bTag ? <p style={{ color: 'blue' }}>#{board.bTag} </p> : <p><br></br></p>}\r\n                                                    </Typography>\r\n                                                </CardContent>\r\n                                            </a>\r\n                                        </CardActionArea>\r\n                                        <CardActions>\r\n                                            <Button size=\"small\" color=\"primary\" onClick={() => handleClickOpen(board.bNo)}>\r\n                                                상세보기\r\n                                            </Button>\r\n                                            <Button size=\"small\" color=\"primary\" onClick={() => boardUpdate(board.bNo)}>\r\n                                                수정\r\n                                            </Button>\r\n                                            {!!props.myInfo && props.myInfo.id === board.mId ?\r\n                                                <Button size=\"small\" color=\"primary\" onClick={() => openModal(board.bNo)}>\r\n                                                    삭제\r\n                                                </Button>\r\n                                                :\r\n                                                <>\r\n                                                    {!!props.myInfo && props.myInfo.type === \"ROLE_ADMIN\" ?\r\n                                                        <Button size=\"small\" color=\"primary\" onClick={() => openModal(board.bNo)}>\r\n                                                            삭제\r\n                                            </Button> :\r\n                                                        <></>}\r\n                                                </>\r\n                                            }\r\n\r\n                                        </CardActions>\r\n                                    </Card>\r\n\r\n                                </Grid>\r\n                            </>\r\n                        ))}\r\n                        {props.isMoreLoading &&\r\n                            <Loading />\r\n                        }\r\n\r\n                    </Grid>\r\n                    <Dialog\r\n                        open={deleteOpen}\r\n                        onClose={dialogClose}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-title\">{\"삭제하겠습니까?\"}</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText id=\"alert-dialog-description\">\r\n                                삭제된 게시글은 다시 복구하실 수 없습니다.\r\n                                        </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <MyButton color=\"red\" onClick={() => boardDelete()} >삭제</MyButton>\r\n                            <MyButton color=\"blue\" onClick={() => dialogClose()} >취소</MyButton>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                    <ScrollTop {...props}></ScrollTop>\r\n                </Container>\r\n            </div>\r\n        </React.Fragment >\r\n    )\r\n}","import { createAction, handleActions } from \"redux-actions\";\n\nconst START_LOADING = \"loading/START_LOADING\";\nconst END_LOADING = \"loading/END_LOADING\";\n\nexport const startLoading = createAction(\n  START_LOADING,\n  (actionType:string) => actionType\n);\n\nexport const endLoading = createAction(\n  END_LOADING,\n  (actionType:string) => actionType\n);\n\n\nconst initialState = {};\n\nconst loading = handleActions(\n  {\n    [START_LOADING]: (state, action:any) => ({\n      ...state,\n      [action.payload]: true,\n    }),\n    [END_LOADING]: (state, action:any) => ({\n      ...state,\n      [action.payload]: false,\n    }),\n  },\n  initialState\n);\n\nexport default loading;\n","import { createAction } from \"redux-actions\";\nimport { call, put } from 'redux-saga/effects';\nimport { startLoading, endLoading } from '../modules/loading';\n\nexport default function createRequestSaga(type: any, request: any) {\n\n  const CALL_SUCCESS = `${type}_SUCCESS`;\n  const CALL_FAILURE = `${type}_FAILURE`;\n\n  const callSuccess = createAction(CALL_SUCCESS, (data: any) => data);\n  const callFailure = createAction(CALL_FAILURE, (e: any) => e);\n\n\n  return function* (action: any) {\n\n    yield put(startLoading(type));\n    try {\n      const response = yield call(request, action.payload);\n      yield put(callSuccess(response.data.result));\n    } catch (e) {\n      yield put(callFailure(e));\n    }\n    yield put(endLoading(type));\n  };\n}\n","import { createAction, handleActions } from \"redux-actions\";\r\nimport { takeLatest } from \"redux-saga/effects\";\r\nimport * as api from \"../lib/api\";\r\n\r\nimport createRequestSaga from \"../lib/createRequestSaga\";\r\n\r\n\r\n/**\r\n * 상세보기\r\n *  */\r\nexport const FETCH_ONE = \"board/FETCH_ONE\";\r\nconst FETCH_ONE_SUCCESS = \"board/FETCH_ONE_SUCCESS\";\r\nconst FETCH_ONE_FAILURE = \"board/FETCH_ONE_FAILURE\";\r\nexport const fetchOne = createAction(FETCH_ONE, (boardNo: number) => boardNo);\r\nconst fetchOneSaga = createRequestSaga(FETCH_ONE, api.fetchBoard);\r\n\r\nexport const TAG = \"board/TAG\";\r\nconst TAG_SUCCESS = \"board/TAG_SUCCESS\";\r\nconst TAG_FAILURE = \"board/TAG_FAILURE\";\r\nexport const tag = createAction(TAG, (boardNo: number) => boardNo);\r\nconst tagSaga = createRequestSaga(TAG, api.tag);\r\n\r\n/***\r\n * 리스트\r\n */\r\nexport const FETCH_LIST = \"board/FETCH_LIST\";\r\nconst FETCH_LIST_SUCCESS = \"board/FETCH_LIST_SUCCESS\";\r\nconst FETCH_LIST_FAILURE = \"board/FETCH_LIST_FAILURE\";\r\nexport const fetchList = createAction(FETCH_LIST, (page: number) => page);\r\nconst fetchListSaga = createRequestSaga(FETCH_LIST, api.fetchBoardList);\r\n\r\nexport const FETCH_MORE_LIST = \"board/FETCH_MORE_LIST\";\r\nconst FETCH_MORE_LIST_SUCCESS = \"board/FETCH_MORE_LIST_SUCCESS\";\r\nconst FETCH_MORE_LIST_FAILURE = \"board/FETCH_MORE_LIST_FAILURE\";\r\n//export const fetchMoreList = createAction(FETCH_MORE_LIST, (page: number, search: string) => page);\r\ninterface search {\r\n    page?: number,\r\n    category?: string,\r\n    strDate?: string,\r\n    endDate?: string\r\n    tagList?: string\r\n\r\n}\r\nexport const fetchMoreList = createAction(FETCH_MORE_LIST, (param: search) => param);\r\nconst fetchMoreListSaga = createRequestSaga(FETCH_MORE_LIST, api.fetchBoardMoreList);\r\n\r\nexport const FETCH_SEARCH_LIST = \"board/FETCH_SEARCH_LIST\";\r\nconst FETCH_SEARCH_LIST_SUCCESS = \"board/FETCH_SEARCH_LIST_SUCCESS\";\r\nconst FETCH_SEARCH_LIST_FAILURE = \"board/FETCH_SEARCH_LIST_FAILURE\";\r\n//export const fetchSearchList = createAction(FETCH_SEARCH_LIST, (category: String) => category);\r\nexport const fetchSearchList = createAction(FETCH_SEARCH_LIST, (searchParam: search) => searchParam);\r\n\r\nconst fetchSearchListSaga = createRequestSaga(FETCH_SEARCH_LIST, api.fetchBoardSearchList);\r\n\r\n\r\n\r\n\r\nexport const TOTAL_PAGE = \"board/TOTAL_PAGE\";\r\nconst TOTAL_PAGE_SUCCESS = \"board/TOTAL_PAGE_SUCCESS\";\r\nconst TOTAL_PAGE_FAILURE = \"board/TOTAL_PAGE_FAILURE\";\r\nexport const getTotalPage = createAction(TOTAL_PAGE, (searchParam: search) => searchParam);\r\nconst totalPageSaga = createRequestSaga(TOTAL_PAGE, api.totalPage);\r\n\r\n\r\n\r\n\r\n/**\r\n * 태그리스트\r\n */\r\nexport const TAG_LIST = \"board/TAG_LIST\";\r\nconst TAG_LIST_SUCCESS = \"board/TAG_LIST_SUCCESS\";\r\nconst TAG_LIST_FAILURE = \"board/TAG_LIST_FAILURE\";\r\nexport const tagList = createAction(TAG_LIST);\r\nconst tagListSaga = createRequestSaga(TAG_LIST, api.tagList);\r\n\r\n\r\n/**\r\n * 카테고리리스트\r\n */\r\nexport const FETCH_CATE_LIST = \"category/FETCH_CATE_LIST\";\r\nconst FETCH_CATE_LIST_SUCCESS = \"category/FETCH_CATE_LIST_SUCCESS\";\r\nconst FETCH_CATE_LIST_FAILURE = \"category/FETCH_CATE_LIST_FAILURE\";\r\nexport const fetchCateList = createAction(FETCH_CATE_LIST);\r\nconst fetchCateListSaga = createRequestSaga(FETCH_CATE_LIST, api.categoryList);\r\n\r\n\r\n/**\r\n * 파일 첨부\r\n *  */\r\nconst ADD_ATTACH = \"board/ADD_ATTACH\";\r\nexport const addAttach = createAction(ADD_ATTACH, (attach: any) => attach);\r\n\r\nconst ADD_BIG_ATTACH = \"board/ADD_BIG_ATTACH\";\r\nexport const addBigAttach = createAction(ADD_BIG_ATTACH, (attach: any) => attach);\r\n\r\n\r\nexport function* boardSaga() {\r\n    yield takeLatest(FETCH_ONE, fetchOneSaga);\r\n    yield takeLatest(FETCH_LIST, fetchListSaga);\r\n    yield takeLatest(FETCH_MORE_LIST, fetchMoreListSaga);\r\n    yield takeLatest(TOTAL_PAGE, totalPageSaga);\r\n    yield takeLatest(TAG, tagSaga);\r\n    yield takeLatest(TAG_LIST, tagListSaga);\r\n    yield takeLatest(FETCH_CATE_LIST, fetchCateListSaga);\r\n    yield takeLatest(FETCH_SEARCH_LIST, fetchSearchListSaga);\r\n}\r\n\r\nconst initialState = {\r\n    board: null,\r\n    boards: [],\r\n    moreBoards: [],\r\n    searchBoards: [],\r\n    boardItem: null,\r\n    boardItems: [],\r\n    attachments: [],\r\n    tag: [],\r\n    categorys: [],\r\n    error: null,\r\n    totalPage: 0\r\n};\r\n\r\nconst board = handleActions(\r\n    {\r\n        [FETCH_CATE_LIST]: (state: any) => ({\r\n            ...state,\r\n            categorys: []\r\n        }),\r\n        [FETCH_CATE_LIST_SUCCESS]: (state, action) => ({\r\n            ...state,\r\n            categorys: action.payload,\r\n        }),\r\n        [FETCH_CATE_LIST_FAILURE]: (state, action) => ({\r\n            ...state,\r\n            error: action.payload,\r\n        }),\r\n\r\n        [FETCH_LIST]: (state: any) => ({\r\n            ...state,\r\n            boards: [],\r\n        }),\r\n        [FETCH_LIST_SUCCESS]: (state, action) => ({\r\n            ...state,\r\n            boards: action.payload,\r\n        }),\r\n        [FETCH_LIST_FAILURE]: (state, action) => ({\r\n            ...state,\r\n            error: action.payload,\r\n        }),\r\n\r\n\r\n        [FETCH_MORE_LIST]: (state: any) => ({\r\n            ...state,\r\n            moreBoards: [],\r\n        }),\r\n        [FETCH_MORE_LIST_SUCCESS]: (state, action) => ({\r\n            ...state,\r\n            moreBoards: action.payload,\r\n        }),\r\n        [FETCH_MORE_LIST_FAILURE]: (state, action) => ({\r\n            ...state,\r\n            error: action.payload,\r\n        }),\r\n\r\n        [FETCH_SEARCH_LIST]: (state: any) => ({\r\n            ...state,\r\n            moreBoards: [],\r\n        }),\r\n        [FETCH_SEARCH_LIST_SUCCESS]: (state, action) => ({\r\n            ...state,\r\n            searchBoards: action.payload,\r\n        }),\r\n        [FETCH_SEARCH_LIST_FAILURE]: (state, action) => ({\r\n            ...state,\r\n            error: action.payload,\r\n        }),\r\n\r\n\r\n        [TOTAL_PAGE]: (state: any) => ({\r\n            ...state,\r\n            totalPage: 0,\r\n        }),\r\n        [TOTAL_PAGE_SUCCESS]: (state, action) => ({\r\n            ...state,\r\n            totalPage: action.payload,\r\n        }),\r\n        [TOTAL_PAGE_FAILURE]: (state, action) => ({\r\n            ...state,\r\n            error: action.payload,\r\n        }),\r\n\r\n        [FETCH_ONE]: (state: any) => ({\r\n            ...state,\r\n            board: null,\r\n        }),\r\n        [FETCH_ONE_SUCCESS]: (state, action) => ({\r\n            ...state,\r\n            board: action.payload,\r\n        }),\r\n        [FETCH_ONE_FAILURE]: (state, action) => ({\r\n            ...state,\r\n            error: action.payload,\r\n        }),\r\n\r\n\r\n\r\n        [ADD_ATTACH]: (state, { payload: attach }: any) => {\r\n            const newAttach = state.attachments.concat(attach);\r\n            return {\r\n                ...state,\r\n                attachments: newAttach,\r\n            }\r\n        },\r\n\r\n        [ADD_BIG_ATTACH]: (state, { payload: attach }: any) => {\r\n            const newBigAttach = state.attachments.concat(attach);\r\n            return {\r\n                ...state,\r\n                attachments: newBigAttach,\r\n            }\r\n        },\r\n\r\n        [TAG]: (state: any) => ({\r\n            ...state,\r\n            tag: [],\r\n        }),\r\n        [TAG_SUCCESS]: (state, action) => ({\r\n            ...state,\r\n            tag: action.payload,\r\n        }),\r\n        [TAG_FAILURE]: (state, action) => ({\r\n            ...state,\r\n            error: action.payload,\r\n        }),\r\n\r\n        [TAG_LIST]: (state: any) => ({\r\n            ...state,\r\n            tag: [],\r\n        }),\r\n        [TAG_LIST_SUCCESS]: (state, action) => ({\r\n            ...state,\r\n            tag: action.payload,\r\n        }),\r\n        [TAG_LIST_FAILURE]: (state, action) => ({\r\n            ...state,\r\n            error: action.payload,\r\n        }),\r\n    },\r\n    initialState\r\n)\r\nexport default board;\r\n","/**\n * React\n */\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n/**\n * component\n */\nimport BoardSearch from \"../../components/board/BoardSearchComponent\";\nimport BoardList from \"../../components/board/BoardListComponent\";\n\n/**\n * module : saga, cookie, api\n */\nimport board, { fetchList, FETCH_LIST, tagList, TAG_LIST, fetchCateList, FETCH_CATE_LIST, fetchMoreList, FETCH_MORE_LIST, FETCH_SEARCH_LIST, fetchSearchList, fetchOne, getTotalPage } from \"../../modules/boardSaga\";\nimport Cookies from \"js-cookie\";\nimport * as api from \"../../lib/api\";\n\n\nconst savedToken = Cookies.get(\"accessToken\");\nlet cpage = 1;\nlet searchCate: string;\nlet searchStrDate: string;\nlet searchEndDate: string;\nlet searchTagList: string;\nlet searchCondition: string;\nlet searchKeyword: string;\nlet searchOrder: string;\nlet totalPage = 0;\nconst BoardListContainer = () => {\n    const dispatch = useDispatch();\n\n    const [search, setSearch] = useState(false);\n\n    // useSelector : 리덕스 보관소에 저장된 것들 가져온다\n    // 가져와서 변수로 선언 하기\n    let { tag, categorys, boards, apiPage, all, moreBoards, searchBoards, boardDetail, isCateLoading, isListLoading, isSearchLoading, isMoreListLoading, isTagLoading, myInfo, }: any = useSelector(({ board, loading, auth }: any) => ({\n        tag: board.tag, // 태그목록\n        categorys: board.categorys, //카테고리목록\n        boards: board.boards, //게시글 목록\n        apiPage: board.totalPage, //총페이지\n        moreBoards: board.moreBoards, // 추가 페이지(페이징됐을때 다음페이지에있는 목록)\n        all: board, // 전체\n        searchBoards: board.searchBoards, // 검색목록\n        boardDetail: board.board, // 상세보기\n        isCateLoading: loading[FETCH_CATE_LIST],\n        isListLoading: loading[FETCH_LIST],\n        isSearchLoading: loading[FETCH_SEARCH_LIST],\n        isMoreListLoading: loading[FETCH_MORE_LIST],\n        isTagLoading: loading[TAG_LIST],\n        myInfo: auth.myInfo,\n    }));\n\n    // 검색 정보\n    let searchParam: search = {};\n\n    /***\n     * 처음 실행됐을 때\n     */\n    useEffect(() => {\n        console.log(\"처음 실행\");\n        // 페이지전체정보 알아내는거\n        pageList(searchParam);\n\n        // 무한 페이징을 위한 스크롤 위치 알아내기\n        window.addEventListener(\"scroll\", handleScroll);\n\n        // dispatch : 액션 실행 함수\n        dispatch(fetchCateList()); // 카테고리 리스트 액션 실행\n        dispatch(tagList()); // 태그 리스트 액션 실행\n        dispatch(fetchList(1)); // \n\n        // 저장된 토큰이 없으면(권한이없으면) return\n        if (savedToken == null) {\n            document.location.href = \"/\";\n        }\n\n    }, []);\n\n\n    /***\n     * 전체 페이지 리스트\n     */\n\n    const pageList = async (searchParam: search) => {\n        console.log(\"전체 페이지 리스트 세팅\")\n        const response = await api.totalPage(searchParam);\n        totalPage = parseInt(response.data.result);\n        cpage = 1;\n        window.addEventListener(\"scroll\", handleScroll);\n        dispatch(getTotalPage(searchParam));\n    }\n\n\n    interface search {\n        page?: number,\n        category?: string,\n        tagList?: string,\n        strDate?: string,\n        endDate?: string,\n        condition?: string,\n        keyword?: string,\n        order?: string\n    }\n\n    // 페이징 위치를 알아내서 끝에 도달하면 현재 페이지 페이지 +1\n    const handleScroll = useCallback(async () => {\n        console.log(\"핸들러 이벤트\")\n        const scrollHeight = document.documentElement.scrollHeight;\n        const scrollTop = document.documentElement.scrollTop;\n        const clientHeight = document.documentElement.clientHeight;\n        console.log(cpage);\n        console.log(totalPage);\n        console.log(\"searchCate : \" + searchCate)\n\n        if ((scrollTop + clientHeight) >= scrollHeight && !isMoreListLoading && !isListLoading && !isSearchLoading) {\n            if (cpage <= Math.ceil(totalPage / 12)) {\n                cpage++;\n            }\n\n            if (cpage != 1 && cpage <= Math.ceil(totalPage / 12)) {\n\n                const searchParam: search =\n                {\n                    page: cpage,\n                    category: searchCate,\n                    tagList: searchTagList,\n                    strDate: searchStrDate,\n                    endDate: searchEndDate,\n                    condition: searchCondition,\n                    keyword: searchKeyword,\n                    order: searchOrder\n                }\n\n                //dispatch(fetchMoreList(cpage, searchCate));\n                dispatch(await fetchMoreList(searchParam));\n            }\n        }\n    }, [search])\n\n    // moreBoards 상태가 변했을 때 : boards에 moreboards 불러온거 push 해서 밑에 더 나오게함\n    useEffect(() => {\n        console.log(\"페이징ㅇ 추가 이벤트\");\n        moreBoards.map((b: any) => {\n            boards.push(b)\n        })\n    }, [moreBoards])\n\n\n    /***\n    * 검색\n    */\n\n    const onSearch = useCallback(async (category: string, selectTagList: [], startDate: string, endDate: string, condition: string, keyword: string, order: string) => {\n        console.log(\"검색 이벤트\")\n        window.removeEventListener(\"scroll\", handleScroll);\n        cpage = 1;\n        // 카테고리\n        if (category !== \"\") {\n            searchParam.category = category;\n            searchCate = category;\n        }\n\n        // 태그리스트\n        if (selectTagList.length !== 0) {\n            searchParam.tagList = selectTagList.join(\",\")\n            searchTagList = selectTagList.join(\",\")\n        } else {\n            searchParam.tagList = \"\";\n            searchTagList = \"\";\n        }\n\n        // 등록날짜\n        if (startDate !== \"\" && endDate !== \"\") {\n            searchParam.strDate = startDate;\n            searchParam.endDate = endDate;\n            searchStrDate = startDate;\n            searchEndDate = endDate;\n        }\n\n        if (order !== \"\" && order != \"\") {\n            searchParam.order = order;\n            searchOrder = order;\n        }\n\n        // 검색어\n        searchParam.condition = condition;\n        searchCondition = condition;\n        searchParam.keyword = keyword;\n        searchKeyword = keyword;\n\n        //await pageList(searchParam);\n        dispatch(fetchSearchList(searchParam));\n        pageList(searchParam);\n        setSearch(true);\n        //        cpage = 1;\n    }, [search]);\n\n\n    useEffect(() => {\n        console.log(\"검색 내용 변경 이벤트\")\n        boards.length = 0;\n        searchBoards.map((b: any) => {\n            boards.push(b)\n        })\n    }, [searchBoards])\n\n\n    /***\n     * 상세보기\n     */\n    const onDetail = useCallback((bNo: number) => {\n        dispatch(fetchOne(bNo));\n    }, [])\n\n\n    return (\n        <div>\n            <BoardSearch\n                categorys={categorys}\n                tag={tag}\n                onSearch={onSearch}\n                isLoading={isCateLoading}\n                isTagLoading={isTagLoading}\n                totalPage={apiPage}\n            />\n            <BoardList\n                boards={boards}\n                board={boardDetail}\n                onDetail={onDetail}\n                isLoading={isListLoading}\n                isSearchLoading={isSearchLoading}\n                isMoreLoading={isMoreListLoading}\n                myInfo={myInfo}\n                totalPage={apiPage}\n            />\n        </div>\n    );\n};\n\nexport default BoardListContainer;","import React from \"react\";\nimport { Link, useLocation } from 'react-router-dom';\nimport Button, { ButtonProps as MuiButtonProps } from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\nimport Typography from '@material-ui/core/Typography';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Icon from '@material-ui/core/Icon';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport AddIcon from '@material-ui/icons/Add';\nimport { RouterPaths } from '../../routes/index';\n//{!isAuthorized && !myInfo && <Link to=\"/signin\">로그인</Link>}\n\n\nfunction MainHeader({ myInfo, isAuthorized, onLogout }: any) {\n\n  const gStyle = {\n    background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n  }\n\n  const drawerWidth = 240;\n\n  const useSideStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n  );\n\n  const sideClasses = useSideStyles();\n\n\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  const handleListItemClick = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    index: number,\n  ) => {\n    setSelectedIndex(index);\n  };\n\n  const location = useLocation();\n\n\n  return (\n\n    <div>\n      {isAuthorized && myInfo && (\n        <div className={sideClasses.root}>\n          <AppBar position=\"fixed\" style={gStyle}>\n            <Toolbar>\n              <Typography variant=\"h6\" color=\"inherit\" className={sideClasses.title} noWrap>\n                <a href=\"/board/list\"><img width='150px'src=\"/image/default/logo.png\"/></a>\n              </Typography>\n              <Typography>\n                <span>{myInfo.name}님 환영합니다.&nbsp;&nbsp;</span>\n                <Button color=\"inherit\" onClick={onLogout}>LOGOUT</Button>\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          </div>\n      )}\n    </div>\n  );\n}\n\nexport default MainHeader;\n","import { createSelector } from \"reselect\";\n\n//엑세스 토큰 전달 선택자 함수\nconst getAccessToken = (state:any) => state.auth.accessToken;\n// 사용자정보 전달 선택자 함수\nconst getMyInfo = (state:any) => state.auth.myInfo;\n\n// 로그인 여부 선택자 함수\nexport const getAuthorized = createSelector(\n  [getAccessToken, getMyInfo],\n  (accessToken, myInfo) => accessToken.length > 0 && !!myInfo\n);\n\n// 관리자 여부 선택자 함수\nexport const isAdmin = createSelector(\n  [getAuthorized, getMyInfo],\n  (isAuthorized, myInfo) =>\n    isAuthorized && myInfo.authList[0].auth === \"ROLE_ADMIN\"\n);\n\n\n//회원 여부 선택자 함수\nexport const isMember = createSelector(\n  [getAuthorized, getMyInfo],\n  (isAuthorized, myInfo) =>\n    isAuthorized && myInfo.authList[0].auth === \"ROLE_MEMBER\"\n);\n","import { createAction, handleActions } from \"redux-actions\";\r\nimport { takeLatest, call, put } from \"redux-saga/effects\";\r\nimport * as api from \"../lib/api\";\r\nimport client from \"../lib/client\";\r\nimport Cookies from \"js-cookie\";\r\nimport createRequestSaga from \"../lib/createRequestSaga\";\r\n\r\nconst SET_ACCESS_TOKEN = \"auth/SET_ACCESS_TOKEN\";\r\nconst LOGIN_FAILURE = \"auth/LOGIN_FAILURE\";\r\nconst LOGIN = \"auth/LOGIN\";\r\nconst LOGIN_SUCESS = \"auth/LOGIN_SUECSS\";\r\n\r\nconst SET_MY_INFO = \"auth/SET_MY_INFO\";\r\nconst CHECK_MY_INFO = \"auth/CHECK_MY_INFO\";\r\n\r\nexport const setAccessToken = createAction(SET_ACCESS_TOKEN, (accessToken: any) => accessToken);\r\nexport const login = createAction(LOGIN, ({ userId, password }: any) => ({ userId, password }));\r\n\r\nexport const setMyInfo = createAction(SET_MY_INFO, (myInfo: any) => myInfo);\r\nexport const checkMyInfo = createAction(CHECK_MY_INFO);\r\n\r\nconst SET_ERROR_MSG = \"auth/SET_ERROR_MSG\";\r\nexport const setErrorMsg = createAction(SET_ERROR_MSG, (errorMsg : any) => errorMsg);\r\n\r\ninterface login {\r\n  payload: {\r\n    password: string;\r\n    userId: string\r\n  };\r\n  type: string;\r\n}\r\n\r\ninterface member {\r\n  id: string,\r\n  name: string,\r\n  email: string,\r\n  password: string,\r\n  type: string,\r\n  regDate: string,\r\n  mNo: number,\r\n  authList: []\r\n}\r\n\r\nconst initialState = {\r\n  accessToken: \"\",\r\n  loginFailure:\"\",\r\n  errorMsg:\"\",\r\n};\r\n\r\n\r\nfunction* loginSaga(action: any) {\r\n  try {\r\n    const { userId, password } = action.payload;\r\n    const response = yield call(api.signIn, userId, password);\r\n\r\n    const {error} = response.headers;\r\n    if(error !== \"\"){\r\n      if(error===\"pwd\"){\r\n        yield put(setErrorMsg(\"잘못된 비밀번호를 입력하셨습니다.\")); \r\n      }else{\r\n        yield put(setErrorMsg(\"없는 아이디입니다.\")); \r\n      }\r\n    }else{\r\n      const { authorization } = response.headers;\r\n      const accessToken = authorization.substring(7);\r\n      yield put(setAccessToken(accessToken));  \r\n      client.defaults.headers.common.Authorization = `Bearer ${accessToken}`;\r\n      Cookies.set(\"accessToken\", accessToken, { expires: 1 });  \r\n    }\r\n\r\n  } catch (e) {\r\n    alert('로그인에 실패하였습니다.');\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nfunction* checkMyInfoSaga() {\r\n  try {\r\n    const response = yield call(api.getMyInfo);\r\n    yield put(setMyInfo(response.data));\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\nexport function* authSaga() {\r\n  yield takeLatest(LOGIN, loginSaga);\r\n  yield takeLatest(CHECK_MY_INFO, checkMyInfoSaga);\r\n}\r\n\r\n\r\n\r\nconst auth = handleActions(\r\n  {\r\n    [SET_ACCESS_TOKEN]: (state, action) => ({\r\n      ...state,\r\n      accessToken: String(action.payload),\r\n    }),\r\n    [SET_ERROR_MSG]: (state, action) => ({\r\n      ...state,\r\n      errorMsg: String(action.payload),\r\n    }),\r\n    [LOGIN_FAILURE]: (state, action) => ({\r\n      ...state,\r\n      error: action.payload,\r\n    }),\r\n    [SET_MY_INFO]: (state, action) => ({\r\n      ...state,\r\n      myInfo: action.payload,\r\n    }),\r\n  },\r\n  initialState\r\n);\r\n\r\nexport default auth;","import React from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport MainHeader from \"../../components/common/MainHeader\";\nimport { getAuthorized } from \"../../modules/selector\";\nimport { setAccessToken, setMyInfo } from \"../../modules/auth\";\nimport client from \"../../lib/client\";\nimport Cookies from \"js-cookie\";\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n\nconst MainHeaderContainer = ({ isAuthorized, myInfo }: any) => {\n  const dispatch = useDispatch();\n  const onLogout = () => {\n    delete client.defaults.headers.common.Authorization;\n    Cookies.remove(\"accessToken\");\n\n    dispatch(setAccessToken(\"\"));\n    dispatch(setMyInfo(null));\n    window.location.href = \"/loginPage\";\n  };\n\n  return (\n    <React.Fragment>\n      <MainHeader\n        myInfo={myInfo}\n        isAuthorized={isAuthorized}\n        onLogout={onLogout}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default connect((state: any) => {\n  return {\n    isAuthorized: getAuthorized(state),\n    myInfo: state.auth.myInfo,\n  };\n})(MainHeaderContainer);\n","import React from \"react\";\r\nimport MainHeaderContainer from \"../containers/common/MainHeaderContainer\";\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nfunction MainLayout({ children }: any) {\r\n  return (\r\n    <div>\r\n      <MainHeaderContainer />\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainLayout;\r\n","import React from \"react\";\r\nimport BoardListContainer from \"../../containers/board/BoardListContainer\";\r\nimport MainLayout from \"../../layout/MainLayout\";\r\n\r\nfunction BoardRegisterPage() {\r\n  return (\r\n    <MainLayout>\r\n      <BoardListContainer />\r\n    </MainLayout>\r\n  );\r\n}\r\n\r\nexport default BoardRegisterPage;\r\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { ILayoutProps } from './Dropzone'\n\nconst Layout = (props: ILayoutProps) => {\n  const {\n    input,\n    previews,\n    submitButton,\n    dropzoneProps,\n    files,\n    extra: { maxFiles },\n  } = props\n\n  return (\n    <div {...dropzoneProps}>\n      {previews}\n\n      {files.length < maxFiles && input}\n\n      {files.length > 0 && submitButton}\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  input: PropTypes.node,\n  previews: PropTypes.arrayOf(PropTypes.node),\n  submitButton: PropTypes.node,\n  dropzoneProps: PropTypes.shape({\n    ref: PropTypes.any.isRequired,\n    className: PropTypes.string.isRequired,\n    style: PropTypes.object,\n    onDragEnter: PropTypes.func.isRequired,\n    onDragOver: PropTypes.func.isRequired,\n    onDragLeave: PropTypes.func.isRequired,\n    onDrop: PropTypes.func.isRequired,\n  }).isRequired,\n  files: PropTypes.arrayOf(PropTypes.any).isRequired,\n  extra: PropTypes.shape({\n    active: PropTypes.bool.isRequired,\n    reject: PropTypes.bool.isRequired,\n    dragged: PropTypes.arrayOf(PropTypes.any).isRequired,\n    accept: PropTypes.string.isRequired,\n    multiple: PropTypes.bool.isRequired,\n    minSizeBytes: PropTypes.number.isRequired,\n    maxSizeBytes: PropTypes.number.isRequired,\n    maxFiles: PropTypes.number.isRequired,\n    onFiles: PropTypes.func.isRequired,\n    onCancelFile: PropTypes.func.isRequired,\n    onRemoveFile: PropTypes.func.isRequired,\n    onRestartFile: PropTypes.func.isRequired,\n  }).isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { IInputProps } from './Dropzone'\n\nconst Input = (props: IInputProps) => {\n  const {\n    className,\n    labelClassName,\n    labelWithFilesClassName,\n    style,\n    labelStyle,\n    labelWithFilesStyle,\n    getFilesFromEvent,\n    accept,\n    multiple,\n    disabled,\n    content,\n    withFilesContent,\n    onFiles,\n    files,\n  } = props\n\n  return (\n    <label\n      className={files.length > 0 ? labelWithFilesClassName : labelClassName}\n      style={files.length > 0 ? labelWithFilesStyle : labelStyle}\n    >\n      {files.length > 0 ? withFilesContent : content}\n      <input\n        className={className}\n        style={style}\n        type=\"file\"\n        accept={accept}\n        multiple={multiple}\n        disabled={disabled}\n        onChange={async e => {\n          const target = e.target\n          const chosenFiles = await getFilesFromEvent(e)\n          onFiles(chosenFiles)\n          //@ts-ignore\n          target.value = null\n        }}\n      />\n    </label>\n  )\n}\n\nInput.propTypes = {\n  className: PropTypes.string,\n  labelClassName: PropTypes.string,\n  labelWithFilesClassName: PropTypes.string,\n  style: PropTypes.object,\n  labelStyle: PropTypes.object,\n  labelWithFilesStyle: PropTypes.object,\n  getFilesFromEvent: PropTypes.func.isRequired,\n  accept: PropTypes.string.isRequired,\n  multiple: PropTypes.bool.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  content: PropTypes.node,\n  withFilesContent: PropTypes.node,\n  onFiles: PropTypes.func.isRequired,\n  files: PropTypes.arrayOf(PropTypes.any).isRequired,\n  extra: PropTypes.shape({\n    active: PropTypes.bool.isRequired,\n    reject: PropTypes.bool.isRequired,\n    dragged: PropTypes.arrayOf(PropTypes.any).isRequired,\n    accept: PropTypes.string.isRequired,\n    multiple: PropTypes.bool.isRequired,\n    minSizeBytes: PropTypes.number.isRequired,\n    maxSizeBytes: PropTypes.number.isRequired,\n    maxFiles: PropTypes.number.isRequired,\n  }).isRequired,\n}\n\nexport default Input\n","import React from 'react'\nimport { IStyleCustomization } from './Dropzone'\n\nexport const formatBytes = (b: number) => {\n  const units = ['bytes', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n  let l = 0\n  let n = b\n\n  while (n >= 1024) {\n    n /= 1024\n    l += 1\n  }\n\n  return `${n.toFixed(n >= 10 || l < 1 ? 0 : 1)}${units[l]}`\n}\n\nexport const formatDuration = (seconds: number) => {\n  const date = new Date(0)\n  date.setSeconds(seconds)\n  const dateString = date.toISOString().slice(11, 19)\n  if (seconds < 3600) return dateString.slice(3)\n  return dateString\n}\n\n// adapted from: https://github.com/okonet/attr-accept/blob/master/src/index.js\n// returns true if file.name is empty and accept string is something like \".csv\",\n// because file comes from dataTransferItem for drag events, and\n// dataTransferItem.name is always empty\nexport const accepts = (file: File, accept: string) => {\n  if (!accept || accept === '*') return true\n\n  const mimeType = file.type || ''\n  const baseMimeType = mimeType.replace(/\\/.*$/, '')\n\n  return accept\n    .split(',')\n    .map(t => t.trim())\n    .some(type => {\n      if (type.charAt(0) === '.') {\n        return file.name === undefined || file.name.toLowerCase().endsWith(type.toLowerCase())\n      } else if (type.endsWith('/*')) {\n        // this is something like an image/* mime type\n        return baseMimeType === type.replace(/\\/.*$/, '')\n      }\n      return mimeType === type\n    })\n}\n\ntype ResolveFn<T> = (...args: any[]) => T\n\nexport const resolveValue = <T = any>(value: ResolveFn<T> | T, ...args: any[]) => {\n  if (typeof value === 'function') return (value as ResolveFn<T>)(...args)\n  return value\n}\n\nexport const defaultClassNames = {\n  dropzone: 'dzu-dropzone',\n  dropzoneActive: 'dzu-dropzoneActive',\n  dropzoneReject: 'dzu-dropzoneActive',\n  dropzoneDisabled: 'dzu-dropzoneDisabled',\n  input: 'dzu-input',\n  inputLabel: 'dzu-inputLabel',\n  inputLabelWithFiles: 'dzu-inputLabelWithFiles',\n  preview: 'dzu-previewContainer',\n  previewImage: 'dzu-previewImage',\n  submitButtonContainer: 'dzu-submitButtonContainer',\n  submitButton: 'dzu-submitButton',\n}\n\nexport const mergeStyles = (\n  classNames: IStyleCustomization<string>,\n  styles: IStyleCustomization<React.CSSProperties>,\n  addClassNames: IStyleCustomization<string>,\n  ...args: any[]\n) => {\n  const resolvedClassNames: { [property: string]: string } = { ...defaultClassNames }\n  const resolvedStyles = { ...styles } as { [property: string]: string }\n\n  for (const [key, value] of Object.entries(classNames)) {\n    resolvedClassNames[key] = resolveValue(value, ...args)\n  }\n\n  for (const [key, value] of Object.entries(addClassNames)) {\n    resolvedClassNames[key] = `${resolvedClassNames[key]} ${resolveValue(value, ...args)}`\n  }\n\n  for (const [key, value] of Object.entries(styles)) {\n    resolvedStyles[key] = resolveValue(value, ...args)\n  }\n\n  return { classNames: resolvedClassNames, styles: resolvedStyles as IStyleCustomization<React.CSSProperties> }\n}\n\nexport const getFilesFromEvent = (\n  event: React.DragEvent<HTMLElement> | React.ChangeEvent<HTMLInputElement>,\n): Array<File | DataTransferItem> => {\n  let items = null\n\n  if ('dataTransfer' in event) {\n    const dt = event.dataTransfer\n\n    // NOTE: Only the 'drop' event has access to DataTransfer.files, otherwise it will always be empty\n    if ('files' in dt && dt.files.length) {\n      items = dt.files\n    } else if (dt.items && dt.items.length) {\n      items = dt.items\n    }\n  } else if (event.target && event.target.files) {\n    items = event.target.files\n  }\n\n  return Array.prototype.slice.call(items)\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { formatBytes, formatDuration } from './utils'\nimport { IPreviewProps } from './Dropzone'\n\nconst iconByFn = {\n  cancel: { backgroundImage: `url(https://www.freeiconspng.com/uploads/remove-icon-png-4.png)` },\n  remove: { backgroundImage: `url(https://www.freeiconspng.com/uploads/remove-icon-png-4.png)` },\n  restart: { backgroundImage: `url(https://www.freeiconspng.com/uploads/power-restart-icon-3.png)`},\n}\n\nclass Preview extends React.PureComponent<IPreviewProps> {\n  render() {\n    const {\n      className,\n      imageClassName,\n      style,\n      imageStyle,\n      fileWithMeta: { cancel, remove, restart },\n      meta: { name = '', percent = 0, size = 0, previewUrl, status, duration, validationError },\n      isUpload,\n      canCancel,\n      canRemove,\n      canRestart,\n      extra: { minSizeBytes },\n    } = this.props\n\n    let title = `${name || '?'}, ${formatBytes(size)}`\n    if (duration) title = `${title}, ${formatDuration(duration)}`\n\n    if (status === 'error_file_size' || status === 'error_validation') {\n      return (\n        <div className={className} style={style}>\n          <span className=\"dzu-previewFileNameError\">{title}</span>\n          {status === 'error_file_size' && <span>{size < minSizeBytes ? 'File too small' : 'File too big'}</span>}\n          {status === 'error_validation' && <span>{String(validationError)}</span>}\n          {canRemove && <span className=\"dzu-previewButton\" style={iconByFn.remove} onClick={remove} />}\n        </div>\n      )\n    }\n\n    if (status === 'error_upload_params' || status === 'exception_upload' || status === 'error_upload') {\n      title = `${title} (upload failed)`\n    }\n    if (status === 'aborted') title = `${title} (cancelled)`\n\n    return (\n      <div className={className} style={style}>\n        {/* {previewUrl && <img className={imageClassName} style={imageStyle} src={previewUrl} alt={title} title={title} />} */}\n        {!previewUrl && <span className=\"dzu-previewFileName\">{title}</span>}\n\n        <div className=\"dzu-previewStatusContainer\">\n          {isUpload && (\n            <progress max={100} value={status === 'done' || status === 'headers_received' ? 100 : percent} />\n          )}\n\n          {status === 'uploading' && canCancel && (\n            <span className=\"dzu-previewButton\" style={iconByFn.cancel} onClick={cancel} />\n          )}\n          {status !== 'preparing' && status !== 'getting_upload_params' && status !== 'uploading' && canRemove && (\n            <span className=\"dzu-previewButton\" style={iconByFn.remove} onClick={remove} />\n          )}\n          {['error_upload_params', 'exception_upload', 'error_upload', 'aborted', 'ready'].includes(status) &&\n            canRestart && <span className=\"dzu-previewButton\" style={iconByFn.restart} onClick={restart} />}\n        </div>\n      </div>\n    )\n  }\n}\n\n// @ts-ignore\nPreview.propTypes = {\n  className: PropTypes.string,\n  imageClassName: PropTypes.string,\n  style: PropTypes.object,\n  imageStyle: PropTypes.object,\n  fileWithMeta: PropTypes.shape({\n    file: PropTypes.any.isRequired,\n    meta: PropTypes.object.isRequired,\n    cancel: PropTypes.func.isRequired,\n    restart: PropTypes.func.isRequired,\n    remove: PropTypes.func.isRequired,\n    xhr: PropTypes.any,\n  }).isRequired,\n  // copy of fileWithMeta.meta, won't be mutated\n  meta: PropTypes.shape({\n    status: PropTypes.oneOf([\n      'preparing',\n      'error_file_size',\n      'error_validation',\n      'ready',\n      'getting_upload_params',\n      'error_upload_params',\n      'uploading',\n      'exception_upload',\n      'aborted',\n      'error_upload',\n      'headers_received',\n      'done',\n    ]).isRequired,\n    type: PropTypes.string.isRequired,\n    name: PropTypes.string,\n    uploadedDate: PropTypes.string.isRequired,\n    percent: PropTypes.number,\n    size: PropTypes.number,\n    lastModifiedDate: PropTypes.string,\n    previewUrl: PropTypes.string,\n    duration: PropTypes.number,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    videoWidth: PropTypes.number,\n    videoHeight: PropTypes.number,\n    validationError: PropTypes.any,\n  }).isRequired,\n  isUpload: PropTypes.bool.isRequired,\n  canCancel: PropTypes.bool.isRequired,\n  canRemove: PropTypes.bool.isRequired,\n  canRestart: PropTypes.bool.isRequired,\n  files: PropTypes.arrayOf(PropTypes.any).isRequired, // eslint-disable-line react/no-unused-prop-types\n  extra: PropTypes.shape({\n    active: PropTypes.bool.isRequired,\n    reject: PropTypes.bool.isRequired,\n    dragged: PropTypes.arrayOf(PropTypes.any).isRequired,\n    accept: PropTypes.string.isRequired,\n    multiple: PropTypes.bool.isRequired,\n    minSizeBytes: PropTypes.number.isRequired,\n    maxSizeBytes: PropTypes.number.isRequired,\n    maxFiles: PropTypes.number.isRequired,\n  }).isRequired,\n}\n\nexport default Preview\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { ISubmitButtonProps } from './Dropzone'\n\nconst SubmitButton = (props: ISubmitButtonProps) => {\n  const { className, buttonClassName, style, buttonStyle, disabled, content, onSubmit, files } = props\n\n  const _disabled =\n    files.some(f => ['preparing', 'getting_upload_params', 'uploading'].includes(f.meta.status)) ||\n    !files.some(f => ['headers_received', 'done'].includes(f.meta.status))\n\n  const handleSubmit = () => {\n    onSubmit(files.filter(f => ['headers_received', 'done'].includes(f.meta.status)))\n  }\n\n  return (\n    <div className={className} style={style}>\n      <button className={buttonClassName} style={buttonStyle} onClick={handleSubmit} disabled={disabled || _disabled}>\n        {content}\n      </button>\n    </div>\n  )\n}\n\nSubmitButton.propTypes = {\n  className: PropTypes.string,\n  buttonClassName: PropTypes.string,\n  style: PropTypes.object,\n  buttonStyle: PropTypes.object,\n  disabled: PropTypes.bool.isRequired,\n  content: PropTypes.node,\n  onSubmit: PropTypes.func.isRequired,\n  files: PropTypes.arrayOf(PropTypes.object).isRequired,\n  extra: PropTypes.shape({\n    active: PropTypes.bool.isRequired,\n    reject: PropTypes.bool.isRequired,\n    dragged: PropTypes.arrayOf(PropTypes.any).isRequired,\n    accept: PropTypes.string.isRequired,\n    multiple: PropTypes.bool.isRequired,\n    minSizeBytes: PropTypes.number.isRequired,\n    maxSizeBytes: PropTypes.number.isRequired,\n    maxFiles: PropTypes.number.isRequired,\n  }).isRequired,\n}\n\nexport default SubmitButton\n","import React, { useState, useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types'\n\nimport LayoutDefault from './Layout'\nimport InputDefault from './Input'\nimport PreviewDefault from './Preview'\nimport SubmitButtonDefault from './SubmitButton'\nimport {\n  formatBytes,\n  formatDuration,\n  accepts,\n  resolveValue,\n  mergeStyles,\n  defaultClassNames,\n  getFilesFromEvent as defaultGetFilesFromEvent,\n} from './utils'\n\n\nexport type StatusValue =\n  | 'rejected_file_type'\n  | 'rejected_max_files'\n  | 'preparing'\n  | 'error_file_size'\n  | 'error_validation'\n  | 'ready'\n  | 'started'\n  | 'getting_upload_params'\n  | 'error_upload_params'\n  | 'uploading'\n  | 'exception_upload'\n  | 'aborted'\n  | 'restarted'\n  | 'removed'\n  | 'error_upload'\n  | 'headers_received'\n  | 'done'\n\nexport type MethodValue =\n  | 'delete'\n  | 'get'\n  | 'head'\n  | 'options'\n  | 'patch'\n  | 'post'\n  | 'put'\n  | 'DELETE'\n  | 'GET'\n  | 'HEAD'\n  | 'OPTIONS'\n  | 'PATCH'\n  | 'POST'\n  | 'PUT'\n\nexport interface IMeta {\n  id: string\n  status: StatusValue\n  type: string // MIME type, example: `image/*`\n  name: string\n  uploadedDate: string // ISO string\n  percent: number\n  size: number // bytes\n  lastModifiedDate: string // ISO string\n  previewUrl?: string // from URL.createObjectURL\n  duration?: number // seconds\n  width?: number\n  height?: number\n  videoWidth?: number\n  videoHeight?: number\n  validationError?: any\n}\n\nexport interface IFileWithMeta {\n  file: File\n  meta: IMeta\n  cancel: () => void\n  restart: () => void\n  remove: () => void\n  xhr?: XMLHttpRequest\n}\n\nexport interface IExtra {\n  active: boolean\n  reject: boolean\n  dragged: DataTransferItem[]\n  accept: string\n  multiple: boolean\n  minSizeBytes: number\n  maxSizeBytes: number\n  maxFiles: number\n}\n\nexport interface IUploadParams {\n  url: string\n  method?: MethodValue\n  body?: string | FormData | ArrayBuffer | Blob | File | URLSearchParams\n  fields?: { [name: string]: string | Blob }\n  headers?: { [name: string]: string }\n  meta?: { [name: string]: any }\n}\n\nexport type CustomizationFunction<T> = (allFiles: IFileWithMeta[], extra: IExtra) => T\n\nexport interface IStyleCustomization<T> {\n  dropzone?: T | CustomizationFunction<T>\n  dropzoneActive?: T | CustomizationFunction<T>\n  dropzoneReject?: T | CustomizationFunction<T>\n  dropzoneDisabled?: T | CustomizationFunction<T>\n  input?: T | CustomizationFunction<T>\n  inputLabel?: T | CustomizationFunction<T>\n  inputLabelWithFiles?: T | CustomizationFunction<T>\n  preview?: T | CustomizationFunction<T>\n\n  submitButtonContainer?: T | CustomizationFunction<T>\n  submitButton?: T | CustomizationFunction<T>\n}\n\nexport interface IExtraLayout extends IExtra {\n  onFiles(files: File[]): void\n  onCancelFile(file: IFileWithMeta): void\n  onRemoveFile(file: IFileWithMeta): void\n  onRestartFile(file: IFileWithMeta): void\n}\n\nexport interface ILayoutProps {\n  files: IFileWithMeta[]\n  extra: IExtraLayout\n  input: React.ReactNode\n  previews: React.ReactNode[] | null\n  submitButton: React.ReactNode\n  dropzoneProps: {\n    ref: React.RefObject<HTMLDivElement>\n    className: string\n    style?: React.CSSProperties\n    onDragEnter(event: React.DragEvent<HTMLElement>): void\n    onDragOver(event: React.DragEvent<HTMLElement>): void\n    onDragLeave(event: React.DragEvent<HTMLElement>): void\n    onDrop(event: React.DragEvent<HTMLElement>): void\n  }\n}\n\ninterface ICommonProps {\n  files: IFileWithMeta[]\n  extra: IExtra\n}\n\nexport interface IPreviewProps extends ICommonProps {\n  meta: IMeta\n  className?: string\n  imageClassName?: string\n  style?: React.CSSProperties\n  imageStyle?: React.CSSProperties\n  fileWithMeta: IFileWithMeta\n  isUpload: boolean\n  canCancel: boolean\n  canRemove: boolean\n  canRestart: boolean\n}\n\nexport interface IInputProps extends ICommonProps {\n  className?: string\n  labelClassName?: string\n  labelWithFilesClassName?: string\n  style?: React.CSSProperties\n  labelStyle?: React.CSSProperties\n  labelWithFilesStyle?: React.CSSProperties\n  getFilesFromEvent: (event: React.ChangeEvent<HTMLInputElement>) => Promise<File[]>\n  accept: string\n  multiple: boolean\n  disabled: boolean\n  content?: React.ReactNode\n  withFilesContent?: React.ReactNode\n  onFiles: (files: File[]) => void\n}\n\nexport interface ISubmitButtonProps extends ICommonProps {\n  className?: string\n  buttonClassName?: string\n  style?: React.CSSProperties\n  buttonStyle?: React.CSSProperties\n  disabled: boolean\n  content?: React.ReactNode\n  onSubmit: (files: IFileWithMeta[]) => void\n}\n\ntype ReactComponent<Props> = (props: Props) => React.ReactNode | React.Component<Props>\n\nexport interface IDropzoneProps {\n  onChangeStatus?(\n    file: IFileWithMeta,\n    status: StatusValue,\n    allFiles: IFileWithMeta[],\n  ): { meta: { [name: string]: any } } | void\n  getUploadParams?(file: IFileWithMeta): IUploadParams | Promise<IUploadParams>\n  onSubmit?(successFiles: IFileWithMeta[], allFiles: IFileWithMeta[]): void\n\n  getFilesFromEvent?: (\n    event: React.DragEvent<HTMLElement> | React.ChangeEvent<HTMLInputElement>,\n  ) => Promise<File[]> | File[]\n  getDataTransferItemsFromEvent?: (\n    event: React.DragEvent<HTMLElement>,\n  ) => Promise<DataTransferItem[]> | DataTransferItem[]\n\n  accept: string\n  multiple: boolean\n  minSizeBytes: number\n  maxSizeBytes: number\n  maxFiles: number\n\n  validate?(file: IFileWithMeta): any // usually a string, but can be anything\n\n  autoUpload: boolean\n  timeout?: number\n\n  initialFiles?: File[]\n\n  /* component customization */\n  disabled: boolean | CustomizationFunction<boolean>\n\n  canCancel: boolean | CustomizationFunction<boolean>\n  canRemove: boolean | CustomizationFunction<boolean>\n  canRestart: boolean | CustomizationFunction<boolean>\n\n  inputContent: React.ReactNode | CustomizationFunction<React.ReactNode>\n  inputWithFilesContent: React.ReactNode | CustomizationFunction<React.ReactNode>\n\n  submitButtonDisabled: boolean | CustomizationFunction<boolean>\n  submitButtonContent: React.ReactNode | CustomizationFunction<React.ReactNode>\n\n  classNames: IStyleCustomization<string>\n  styles: IStyleCustomization<React.CSSProperties>\n  addClassNames: IStyleCustomization<string>\n\n  /* component injection */\n  LayoutComponent?: ReactComponent<ILayoutProps>\n  PreviewComponent?: ReactComponent<IPreviewProps>\n  InputComponent?: ReactComponent<IInputProps>\n  SubmitButtonComponent?: ReactComponent<ISubmitButtonProps>\n}\n\nclass Dropzone extends React.Component<IDropzoneProps, { active: boolean; dragged: (File | DataTransferItem)[] }> {\n  static defaultProps: IDropzoneProps\n  protected files: IFileWithMeta[]\n  protected mounted: boolean\n  protected dropzone: React.RefObject<HTMLDivElement>\n  protected dragTimeoutId?: number\n\n  constructor(props: IDropzoneProps) {\n    super(props)\n    this.state = {\n      active: false,\n      dragged: [],\n    }\n    this.files = []\n    this.mounted = true\n    this.dropzone = React.createRef()\n  }\n\n  componentDidMount() {\n    if (this.props.initialFiles) this.handleFiles(this.props.initialFiles)\n  }\n\n  componentDidUpdate(prevProps: IDropzoneProps) {\n    const { initialFiles } = this.props\n    if (prevProps.initialFiles !== initialFiles && initialFiles) this.handleFiles(initialFiles)\n  }\n\n  componentWillUnmount() {\n    this.mounted = false\n    for (const fileWithMeta of this.files) this.handleCancel(fileWithMeta)\n  }\n\n  forceUpdate = () => {\n    if (this.mounted) super.forceUpdate()\n  }\n\n  getFilesFromEvent = () => {\n    return this.props.getFilesFromEvent || defaultGetFilesFromEvent\n  }\n\n  getDataTransferItemsFromEvent = () => {\n    return this.props.getDataTransferItemsFromEvent || defaultGetFilesFromEvent\n  }\n\n  handleDragEnter = async (e: React.DragEvent<HTMLElement>) => {\n    e.preventDefault()\n    e.stopPropagation()\n    const dragged = (await this.getDataTransferItemsFromEvent()(e)) as DataTransferItem[]\n    this.setState({ active: true, dragged })\n  }\n\n  handleDragOver = async (e: React.DragEvent<HTMLElement>) => {\n    e.preventDefault()\n    e.stopPropagation()\n    clearTimeout(this.dragTimeoutId)\n    const dragged = await this.getDataTransferItemsFromEvent()(e)\n    this.setState({ active: true, dragged })\n  }\n\n  handleDragLeave = (e: React.DragEvent<HTMLElement>) => {\n    e.preventDefault()\n    e.stopPropagation()\n    // prevents repeated toggling of `active` state when file is dragged over children of uploader\n    // see: https://www.smashingmagazine.com/2018/01/drag-drop-file-uploader-vanilla-js/\n    this.dragTimeoutId = window.setTimeout(() => this.setState({ active: false, dragged: [] }), 150)\n  }\n\n  handleDrop = async (e: React.DragEvent<HTMLElement>) => {\n    e.preventDefault()\n    e.stopPropagation()\n    this.setState({ active: false, dragged: [] })\n    const files = (await this.getFilesFromEvent()(e)) as File[]\n    this.handleFiles(files)\n  }\n\n  handleDropDisabled = (e: React.DragEvent<HTMLElement>) => {\n    e.preventDefault()\n    e.stopPropagation()\n    this.setState({ active: false, dragged: [] })\n  }\n\n  handleChangeStatus = (fileWithMeta: IFileWithMeta) => {\n    if (!this.props.onChangeStatus) return\n    const { meta = {} } = this.props.onChangeStatus(fileWithMeta, fileWithMeta.meta.status, this.files) || {}\n    if (meta) {\n      delete meta.status\n      fileWithMeta.meta = { ...fileWithMeta.meta, ...meta }\n      this.forceUpdate()\n    }\n  }\n\n  handleSubmit = (files: IFileWithMeta[]) => {\n    if (this.props.onSubmit) this.props.onSubmit(files, [...this.files])\n  }\n\n  handleCancel = (fileWithMeta: IFileWithMeta) => {\n    if (fileWithMeta.meta.status !== 'uploading') return\n    fileWithMeta.meta.status = 'aborted'\n    if (fileWithMeta.xhr) fileWithMeta.xhr.abort()\n    this.handleChangeStatus(fileWithMeta)\n    this.forceUpdate()\n  }\n\n  handleRemove = (fileWithMeta: IFileWithMeta) => {\n    const index = this.files.findIndex(f => f === fileWithMeta)\n    if (index !== -1) {\n      URL.revokeObjectURL(fileWithMeta.meta.previewUrl || '')\n      fileWithMeta.meta.status = 'removed'\n      this.handleChangeStatus(fileWithMeta)\n      this.files.splice(index, 1)\n      this.forceUpdate()\n    }\n  }\n\n  handleRestart = (fileWithMeta: IFileWithMeta) => {\n    if (!this.props.getUploadParams) return\n\n    if (fileWithMeta.meta.status === 'ready') fileWithMeta.meta.status = 'started'\n    else fileWithMeta.meta.status = 'restarted'\n    this.handleChangeStatus(fileWithMeta)\n\n    fileWithMeta.meta.status = 'getting_upload_params'\n    fileWithMeta.meta.percent = 0\n    this.handleChangeStatus(fileWithMeta)\n    this.forceUpdate()\n    this.uploadFile(fileWithMeta)\n  }\n\n  // expects an array of File objects\n  handleFiles = (files: File[]) => {\n    files.forEach((f, i) => this.handleFile(f, `${new Date().getTime()}-${i}`))\n    const { current } = this.dropzone\n    if (current) setTimeout(() => current.scroll({ top: current.scrollHeight, behavior: 'smooth' }), 150)\n  }\n\n  handleFile = async (file: File, id: string) => {\n    const { name, size, type, lastModified } = file\n    const { minSizeBytes, maxSizeBytes, maxFiles, accept, getUploadParams, autoUpload, validate } = this.props\n\n    const arr: IFileWithMeta[] = this.files\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i].file.name === file.name) {\n        alert('파일을 중복으로 등록하실 수 없습니다.')\n        return false;\n      }\n    }\n    const uploadedDate = new Date().toISOString()\n    const lastModifiedDate = lastModified && new Date(lastModified).toISOString()\n    const fileWithMeta = {\n      file,\n      meta: { name, size, type, lastModifiedDate, uploadedDate, percent: 0, id },\n    } as IFileWithMeta\n\n    // firefox versions prior to 53 return a bogus mime type for file drag events,\n    // so files with that mime type are always accepted\n    if (file.type !== 'application/x-moz-file' && !accepts(file, accept)) {\n      fileWithMeta.meta.status = 'rejected_file_type'\n      this.handleChangeStatus(fileWithMeta)\n      return\n    }\n    if (this.files.length >= maxFiles) {\n      fileWithMeta.meta.status = 'rejected_max_files'\n      this.handleChangeStatus(fileWithMeta)\n      return\n    }\n\n    fileWithMeta.cancel = () => this.handleCancel(fileWithMeta)\n    fileWithMeta.remove = () => this.handleRemove(fileWithMeta)\n    fileWithMeta.restart = () => this.handleRestart(fileWithMeta)\n\n    fileWithMeta.meta.status = 'preparing'\n    this.files.push(fileWithMeta)\n    this.handleChangeStatus(fileWithMeta)\n    this.forceUpdate()\n\n    if (size < minSizeBytes || size > maxSizeBytes) {\n      fileWithMeta.meta.status = 'error_file_size'\n      this.handleChangeStatus(fileWithMeta)\n      this.forceUpdate()\n      return\n    }\n\n    await this.generatePreview(fileWithMeta)\n\n    if (validate) {\n      const error = validate(fileWithMeta)\n      if (error) {\n        fileWithMeta.meta.status = 'error_validation'\n        fileWithMeta.meta.validationError = error // usually a string, but doesn't have to be\n        this.handleChangeStatus(fileWithMeta)\n        this.forceUpdate()\n        return\n      }\n    }\n\n    if (getUploadParams) {\n      if (autoUpload) {\n        this.uploadFile(fileWithMeta)\n        fileWithMeta.meta.status = 'getting_upload_params'\n      } else {\n        fileWithMeta.meta.status = 'ready'\n      }\n    } else {\n      fileWithMeta.meta.status = 'done'\n    }\n    this.handleChangeStatus(fileWithMeta)\n    this.forceUpdate()\n  }\n\n  generatePreview = async (fileWithMeta: IFileWithMeta) => {\n    const {\n      meta: { type },\n      file,\n    } = fileWithMeta\n    const isImage = type.startsWith('image/')\n    const isAudio = type.startsWith('audio/')\n    const isVideo = type.startsWith('video/')\n    if (!isImage && !isAudio && !isVideo) return\n\n    const objectUrl = URL.createObjectURL(file)\n\n    const fileCallbackToPromise = (fileObj: HTMLImageElement | HTMLAudioElement) => {\n      return Promise.race([\n        new Promise(resolve => {\n          if (fileObj instanceof HTMLImageElement) fileObj.onload = resolve\n          else fileObj.onloadedmetadata = resolve\n        }),\n        new Promise((_, reject) => {\n          setTimeout(reject, 1000)\n        }),\n      ])\n    }\n\n    try {\n      if (isAudio) {\n        const audio = new Audio()\n        audio.src = objectUrl\n        await fileCallbackToPromise(audio)\n        fileWithMeta.meta.duration = audio.duration\n      }\n\n      if (isVideo) {\n        const video = document.createElement('video')\n        video.src = objectUrl\n        await fileCallbackToPromise(video)\n        fileWithMeta.meta.duration = video.duration\n        fileWithMeta.meta.videoWidth = video.videoWidth\n        fileWithMeta.meta.videoHeight = video.videoHeight\n      }\n      URL.revokeObjectURL(objectUrl)\n    } catch (e) {\n      URL.revokeObjectURL(objectUrl)\n    }\n    this.forceUpdate()\n  }\n\n  uploadFile = async (fileWithMeta: IFileWithMeta) => {\n    const { getUploadParams } = this.props\n    if (!getUploadParams) return\n    let params: IUploadParams | null = null\n    try {\n      params = await getUploadParams(fileWithMeta)\n    } catch (e) {\n      console.error('Error Upload Params', e.stack)\n    }\n    if (params === null) return\n    const { url, method = 'POST', body, fields = {}, headers = {}, meta: extraMeta = {} } = params\n    delete extraMeta.status\n\n    if (!url) {\n      fileWithMeta.meta.status = 'error_upload_params'\n      this.handleChangeStatus(fileWithMeta)\n      this.forceUpdate()\n      return\n    }\n\n    const xhr = new XMLHttpRequest()\n    const formData = new FormData()\n    xhr.open(method, url, true)\n\n    for (const field of Object.keys(fields)) formData.append(field, fields[field])\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest')\n    for (const header of Object.keys(headers)) xhr.setRequestHeader(header, headers[header])\n    fileWithMeta.meta = { ...fileWithMeta.meta, ...extraMeta }\n\n    // update progress (can be used to show progress indicator)\n    xhr.upload.addEventListener('progress', e => {\n      fileWithMeta.meta.percent = (e.loaded * 100.0) / e.total || 100\n      this.forceUpdate()\n    })\n\n    xhr.addEventListener('readystatechange', () => {\n      // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState\n      if (xhr.readyState !== 2 && xhr.readyState !== 4) return\n\n      if (xhr.status === 0 && fileWithMeta.meta.status !== 'aborted') {\n        fileWithMeta.meta.status = 'exception_upload'\n        this.handleChangeStatus(fileWithMeta)\n        this.forceUpdate()\n      }\n\n      if (xhr.status > 0 && xhr.status < 400) {\n        fileWithMeta.meta.percent = 100\n        if (xhr.readyState === 2) fileWithMeta.meta.status = 'headers_received'\n        if (xhr.readyState === 4) fileWithMeta.meta.status = 'done'\n        this.handleChangeStatus(fileWithMeta)\n        this.forceUpdate()\n      }\n\n      if (xhr.status >= 400 && fileWithMeta.meta.status !== 'error_upload') {\n        fileWithMeta.meta.status = 'error_upload'\n        this.handleChangeStatus(fileWithMeta)\n        this.forceUpdate()\n      }\n    })\n\n    formData.append('file', fileWithMeta.file)\n    if (this.props.timeout) xhr.timeout = this.props.timeout\n    xhr.send(body || formData)\n    fileWithMeta.xhr = xhr\n    fileWithMeta.meta.status = 'uploading'\n    this.handleChangeStatus(fileWithMeta)\n    this.forceUpdate()\n  }\n\n  render() {\n    const {\n      accept,\n      multiple,\n      maxFiles,\n      minSizeBytes,\n      maxSizeBytes,\n      onSubmit,\n      getUploadParams,\n      disabled,\n      canCancel,\n      canRemove,\n      canRestart,\n      inputContent,\n      inputWithFilesContent,\n      submitButtonDisabled,\n      submitButtonContent,\n      classNames,\n      styles,\n      addClassNames,\n      InputComponent,\n      PreviewComponent,\n      SubmitButtonComponent,\n      LayoutComponent,\n    } = this.props\n\n    const { active, dragged } = this.state\n\n    const reject = dragged.some(file => file.type !== 'application/x-moz-file' && !accepts(file as File, accept))\n    const extra = { active, reject, dragged, accept, multiple, minSizeBytes, maxSizeBytes, maxFiles } as IExtra\n    const files = [...this.files]\n    const dropzoneDisabled = resolveValue(disabled, files, extra)\n\n    const {\n      classNames: {\n        dropzone: dropzoneClassName,\n        dropzoneActive: dropzoneActiveClassName,\n        dropzoneReject: dropzoneRejectClassName,\n        dropzoneDisabled: dropzoneDisabledClassName,\n        input: inputClassName,\n        inputLabel: inputLabelClassName,\n        inputLabelWithFiles: inputLabelWithFilesClassName,\n        preview: previewClassName,\n\n        submitButtonContainer: submitButtonContainerClassName,\n        submitButton: submitButtonClassName,\n      },\n      styles: {\n        dropzone: dropzoneStyle,\n        dropzoneActive: dropzoneActiveStyle,\n        dropzoneReject: dropzoneRejectStyle,\n        dropzoneDisabled: dropzoneDisabledStyle,\n        input: inputStyle,\n        inputLabel: inputLabelStyle,\n        inputLabelWithFiles: inputLabelWithFilesStyle,\n        preview: previewStyle,\n\n        submitButtonContainer: submitButtonContainerStyle,\n        submitButton: submitButtonStyle,\n      },\n    } = mergeStyles(classNames, styles, addClassNames, files, extra)\n\n    const Input = InputComponent || InputDefault\n    const Preview = PreviewComponent || PreviewDefault\n    const SubmitButton = SubmitButtonComponent || SubmitButtonDefault\n    const Layout = LayoutComponent || LayoutDefault\n\n    let previews = null\n    if (PreviewComponent !== null) {\n      previews = files.map(f => {\n        return (\n          //@ts-ignore\n          <Preview\n            className={previewClassName}\n\n            style={previewStyle as React.CSSProperties}\n\n            key={f.meta.id}\n            fileWithMeta={f}\n            meta={{ ...f.meta }}\n            isUpload={Boolean(getUploadParams)}\n            canCancel={resolveValue(canCancel, files, extra)}\n            canRemove={resolveValue(canRemove, files, extra)}\n            canRestart={resolveValue(canRestart, files, extra)}\n            files={files}\n            extra={extra}\n          />\n        )\n      })\n    }\n\n    const input =\n      InputComponent !== null ? (\n        //@ts-ignore\n        <Input\n          className={inputClassName}\n          labelClassName={inputLabelClassName}\n          labelWithFilesClassName={inputLabelWithFilesClassName}\n          style={inputStyle as React.CSSProperties}\n          labelStyle={inputLabelStyle as React.CSSProperties}\n          labelWithFilesStyle={inputLabelWithFilesStyle as React.CSSProperties}\n          getFilesFromEvent={this.getFilesFromEvent() as IInputProps['getFilesFromEvent']}\n          accept={accept}\n          multiple={multiple}\n          disabled={dropzoneDisabled}\n          content={resolveValue(inputContent, files, extra)}\n          withFilesContent={resolveValue(inputWithFilesContent, files, extra)}\n          onFiles={this.handleFiles} // see: https://stackoverflow.com/questions/39484895\n          files={files}\n          extra={extra}\n        />\n      ) : null\n\n    const submitButton =\n      onSubmit && SubmitButtonComponent !== null ? (\n        //@ts-ignore\n        <SubmitButton\n          className={submitButtonContainerClassName}\n          buttonClassName={submitButtonClassName}\n          style={submitButtonContainerStyle as React.CSSProperties}\n          buttonStyle={submitButtonStyle as React.CSSProperties}\n          disabled={resolveValue(submitButtonDisabled, files, extra)}\n          content={resolveValue(submitButtonContent, files, extra)}\n          onSubmit={this.handleSubmit}\n          files={files}\n          extra={extra}\n        />\n      ) : null\n\n    let className = dropzoneClassName\n    let style = dropzoneStyle\n\n    if (dropzoneDisabled) {\n      className = `${className} ${dropzoneDisabledClassName}`\n      style = { ...(style || {}), ...(dropzoneDisabledStyle || {}) }\n    } else if (reject) {\n      className = `${className} ${dropzoneRejectClassName}`\n      style = { ...(style || {}), ...(dropzoneRejectStyle || {}) }\n    } else if (active) {\n      className = `${className} ${dropzoneActiveClassName}`\n      style = { ...(style || {}), ...(dropzoneActiveStyle || {}) }\n    }\n\n    return (\n      //@ts-ignore\n      <Layout\n        input={input}\n        previews={previews}\n        dropzoneProps={{\n          ref: this.dropzone,\n          className,\n          style: style as React.CSSProperties,\n          onDragEnter: this.handleDragEnter,\n          onDragOver: this.handleDragOver,\n          onDragLeave: this.handleDragLeave,\n          onDrop: dropzoneDisabled ? this.handleDropDisabled : this.handleDrop,\n        }}\n        files={files}\n        extra={\n          {\n            ...extra,\n            onFiles: this.handleFiles,\n            onCancelFile: this.handleCancel,\n            onRemoveFile: this.handleRemove,\n            onRestartFile: this.handleRestart,\n          } as IExtraLayout\n        }\n      />\n    )\n  }\n}\n\nDropzone.defaultProps = {\n  accept: '*',\n  multiple: true,\n  minSizeBytes: 0,\n  maxSizeBytes: Number.MAX_SAFE_INTEGER,\n  maxFiles: Number.MAX_SAFE_INTEGER,\n  autoUpload: true,\n  disabled: false,\n  canCancel: true,\n  canRemove: true,\n  canRestart: true,\n  inputContent: 'Drag Files or Click to Browse',\n  inputWithFilesContent: 'Add Files',\n  submitButtonDisabled: false,\n  submitButtonContent: 'Submit',\n  classNames: {},\n  styles: {},\n  addClassNames: {},\n}\n\n// @ts-ignore\nDropzone.propTypes = {\n  onChangeStatus: PropTypes.func,\n  getUploadParams: PropTypes.func,\n  onSubmit: PropTypes.func,\n\n  getFilesFromEvent: PropTypes.func,\n  getDataTransferItemsFromEvent: PropTypes.func,\n\n  accept: PropTypes.string,\n  multiple: PropTypes.bool,\n  minSizeBytes: PropTypes.number.isRequired,\n  maxSizeBytes: PropTypes.number.isRequired,\n  maxFiles: PropTypes.number.isRequired,\n\n  validate: PropTypes.func,\n\n  autoUpload: PropTypes.bool,\n  timeout: PropTypes.number,\n\n  initialFiles: PropTypes.arrayOf(PropTypes.any),\n\n  /* component customization */\n  disabled: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n\n  canCancel: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n  canRemove: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n  canRestart: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n\n  inputContent: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  inputWithFilesContent: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n\n  submitButtonDisabled: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n  submitButtonContent: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n\n  classNames: PropTypes.object.isRequired,\n  styles: PropTypes.object.isRequired,\n  addClassNames: PropTypes.object.isRequired,\n\n  /* component injection */\n  InputComponent: PropTypes.func,\n  PreviewComponent: PropTypes.func,\n  SubmitButtonComponent: PropTypes.func,\n  LayoutComponent: PropTypes.func,\n}\n\nexport default Dropzone\nexport {\n  LayoutDefault as Layout,\n  InputDefault as Input,\n  PreviewDefault as Preview,\n  formatBytes,\n  formatDuration,\n  accepts,\n  defaultClassNames,\n  defaultGetFilesFromEvent as getFilesFromEvent,\n}\n","import React, { useState, useCallback, useEffect } from 'react';\r\nimport Button, { ButtonProps as MuiButtonProps } from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { fade, withStyles, Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport Input from '@material-ui/core/Input';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport 'react-dropzone-uploader/dist/styles.css'\r\nimport ChipInput from 'material-ui-chip-input'\r\nimport Dropzone from '../board/dropzone/Dropzone';\r\nimport '../board/dropzone/styles.css';\r\nimport ReactLoading from 'react-loading';\r\nimport TreeItem, { TreeItemProps } from '@material-ui/lab/TreeItem';\r\nimport { arrayToTree } from 'performant-array-to-tree'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nconst barStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      position: 'fixed',\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(2),\r\n    },\r\n  }),\r\n);\r\n\r\n\r\n\r\nconst StyledTreeItem = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    iconContainer: {\r\n      '& .close': {\r\n        opacity: 0.3,\r\n      },\r\n    },\r\n    group: {\r\n      marginLeft: 7,\r\n      paddingLeft: 18,\r\n      borderLeft: `1px dashed ${fade(theme.palette.text.primary, 0.4)}`,\r\n    },\r\n  }),\r\n)((props: TreeItemProps) => <TreeItem {...props} />);\r\n\r\nconst useTreeStyles = makeStyles(\r\n  createStyles({\r\n    root: {\r\n      height: 264,\r\n      flexGrow: 1,\r\n      maxWidth: 400,\r\n    },\r\n  }),\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  heroContent: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  heroButtons: {\r\n    marginTop: theme.spacing(4),\r\n  },\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n  card: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  cardMedia: {\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  cardContent: {\r\n    flexGrow: 1,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(6),\r\n  },\r\n}));\r\n\r\ninterface ButtonProps {\r\n  color: 'red' | 'blue';\r\n}\r\n\r\nconst ButtonStyles = makeStyles({\r\n  root: {\r\n    background: (props: ButtonProps) =>\r\n      props.color === 'red'\r\n        ? 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\r\n        : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\r\n    border: 0,\r\n    borderRadius: 3,\r\n    boxShadow: (props: ButtonProps) =>\r\n      props.color === 'red'\r\n        ? '0 3px 5px 2px rgba(255, 105, 135, .3)'\r\n        : '0 3px 5px 2px rgba(33, 203, 243, .3)',\r\n    color: 'white',\r\n    height: 48,\r\n    padding: '0 30px',\r\n    margin: 8,\r\n  },\r\n});\r\n\r\nfunction MyButton(props: ButtonProps & Omit<MuiButtonProps, keyof ButtonProps>) {\r\n  const { color, ...other } = props;\r\n  const buttonStyle = ButtonStyles(props);\r\n  return <Button className={buttonStyle.root} {...other} />;\r\n}\r\n\r\nconst useSearchStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function Album(\r\n  props: any,\r\n) {\r\n\r\n\r\n  useEffect(() => {\r\n    if (props.attachments.length != 0 && props.attachments.length == file.length) {\r\n      //setValidation('등록 완료')\r\n      //handleClickOpen();\r\n      document.location.href = \"/board/list\";\r\n    }\r\n  }, [props.attachments]);\r\n\r\n  const classes = useStyles();\r\n  const searchStyle = useSearchStyles();\r\n\r\n  const [title, setTitle] = useState('');\r\n  const [category, setCategory] = useState('');\r\n\r\n  interface f {\r\n    file: File,\r\n    meta: [],\r\n  }\r\n\r\n  const [file, setFile] = useState<Array<f>>([]);\r\n  const [tag, setTag] = useState([]);\r\n\r\n  //dialog\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const back = () => {\r\n    document.location.href = \"/board/list\";\r\n  }\r\n\r\n  const fileOnChange = useCallback((e) => {\r\n    setOpen(true);\r\n    console.log(e.target);\r\n    setFile(e[0]);\r\n  }, []);\r\n\r\n  const tagOnChange = useCallback((e) => {\r\n    setTag(e);\r\n  }, []);\r\n\r\n  const titleOnChange = useCallback((e) => {\r\n    setTitle(e.target.value);\r\n  }, []);\r\n\r\n  const [validation, setValidation] = useState(\"\");\r\n\r\n  const fileUpload = useCallback(async (e) => {\r\n    e.preventDefault();\r\n\r\n    // 0. validation\r\n    if (title === \"\") {\r\n      setValidation(\"제목을 입력해주세요\")\r\n      handleClickOpen();\r\n    } else if (category === \"\") {\r\n      setValidation(\"카테고리를 선택해주세요\")\r\n      handleClickOpen();\r\n    } else if (file.length === 0) {\r\n      setValidation(\"파일을 입력해주세요\")\r\n      handleClickOpen();\r\n    } else {\r\n\r\n      setLoading(true);\r\n      setLoad(\"upload\")\r\n      // 1. board dbdlqfur\r\n      const bNo = await props.onRegister(title, category, tag);\r\n      let fileLevel = 0;\r\n      // 2. 파일 전송\r\n      //const files :File = file[0];\r\n      const list: any[] = [];\r\n      let flag = false;\r\n      let bigFileLength = 0;\r\n\r\n      for (let i = 0; i < file.length; i++) {\r\n        const f: File = file[i].file;\r\n        // 10메가이상일때\r\n        if (f.size >= 10485760) {\r\n          flag = true;\r\n          // 20메가이상 분할 업로드\r\n          const fileName: string = f.name;\r\n          //f.arrayBuffer().then(async () => {\r\n          const numberOfSlices = Math.ceil(f.size / 10485760)\r\n          const chunkSize = 10485760;\r\n          let startByte: number;\r\n          // 10mb씩 분할 업로드\r\n          fileLevel++;\r\n          bigFileLength++;\r\n\r\n          for (let i = 0; i < numberOfSlices; i += 1) {\r\n            if (i == numberOfSlices - 1) {\r\n              //마지막\r\n              startByte = chunkSize * (numberOfSlices - 1);\r\n            } else {\r\n              //10메가씩\r\n              startByte = chunkSize * i;\r\n            }\r\n            const b: Blob = f.slice(\r\n              startByte,\r\n              startByte + chunkSize,\r\n              f.type\r\n            )\r\n\r\n            list.push({\r\n              \"file\": b,\r\n              \"fileName\": fileName,\r\n              \"bNo\": String(bNo),\r\n              \"fileLevel\": String(fileLevel),\r\n              \"numberOfSlices\": String(numberOfSlices),\r\n              \"size\": f.size\r\n            })\r\n          }\r\n        } else {\r\n          // multipart로 업로드하기\r\n          fileLevel++;\r\n          await props.onAddAttach(f, bNo, fileLevel, f.size);\r\n        }\r\n      }\r\n\r\n      if (flag) {\r\n        // 대용량업로드\r\n        await props.onAddBigAttach(list, bigFileLength);\r\n      }\r\n    }\r\n  }, [file, title, category, tag]);\r\n\r\n  let flag = true;\r\n\r\n  // 카테고리\r\n  let trees: any[] = [{}];\r\n\r\n  if (props.categorys != null && props.categorys.length != 0) {\r\n    const arr = props.categorys;\r\n    trees = arrayToTree(arr, { dataField: null })\r\n  }\r\n\r\n\r\n  interface TreeViews {\r\n    children?: TreeViews[];\r\n    custom: string;\r\n    id: string;\r\n  }\r\n\r\n  interface CategoryProps {\r\n    category: TreeViews\r\n  }\r\n\r\n  const renderTrees = (nodes: TreeViews) => (\r\n    <StyledTreeItem key={nodes.id} nodeId={nodes.id} label={nodes.custom}>\r\n      {Array.isArray(nodes.children) ? nodes.children.map((node) => renderTrees(node)) : null}\r\n    </StyledTreeItem>\r\n  );\r\n\r\n\r\n  const Category = ({ category }: CategoryProps) => {\r\n    useEffect(() => {\r\n\r\n    }, [category]);\r\n    return renderTrees(category);\r\n  }\r\n\r\n  const useTreeStyles = makeStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      textAlign: 'left',\r\n    },\r\n  });\r\n\r\n  const treeClasses = useTreeStyles();\r\n\r\n  const handleToggle = (event: any, nodeIds: string[]) => {\r\n    event.persist()\r\n  };\r\n  const handleNodeSelect = (event: any, nodeId: React.SetStateAction<string>) => {\r\n    setCategory(nodeId);\r\n  };\r\n\r\n  const bStyle = barStyles();\r\n\r\n\r\n  const handleChangeStatus = useCallback((upFile: any, status: any, files: any[],) => {\r\n    setFile(files);\r\n  }, [file]);\r\n\r\n  const handleSubmit = (files: any, allFiles: any) => {\r\n    setFile(allFiles);\r\n  }\r\n\r\n  const componentConfig = {\r\n    sending: null,\r\n  }\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const selectCancel = () => {\r\n    document.location.href = \"/board/list\";\r\n  }\r\n\r\n  const [load, setLoad] = useState(\"all\");\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Toolbar style={{ display: \"inline\" }} id=\"back-to-top-anchor\" />\r\n      <main className={load}>\r\n        {loading &&\r\n          <>\r\n            <div className=\"contentWrap\">\r\n              <div style={{\r\n                position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\", zIndex: 100\r\n              }}>\r\n\r\n                <h2>전송중입니다</h2>\r\n                <ReactLoading type=\"spin\" color=\"black\" height={'80%'} width={'80%'} />\r\n              </div>\r\n            </div>\r\n          </>\r\n        }\r\n\r\n        <div className={classes.cardGrid}>\r\n          <Container maxWidth=\"sm\">\r\n            <Typography component=\"h1\" variant=\"h3\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n              <b>게시글 등록</b>\r\n            </Typography>\r\n          </Container>\r\n          <form onSubmit={fileUpload}>\r\n            <Container maxWidth=\"md\">\r\n              <p style={{ fontSize: \"14pt\" }}>* 제목</p>\r\n              <Paper className={searchStyle.paper}>\r\n                <Input\r\n                  fullWidth\r\n                  onChange={titleOnChange}\r\n                  autoFocus\r\n                />\r\n              </Paper>\r\n            </Container>\r\n            <br></br>\r\n            <br></br>\r\n            <Container maxWidth=\"md\">\r\n              <p style={{ fontSize: \"14pt\" }}>* 카테고리 선택</p>\r\n              <Paper className={searchStyle.paper}>\r\n                {props.categorys.length > 0 && (\r\n                  <TreeView\r\n                    onNodeToggle={handleToggle}\r\n                    onNodeSelect={handleNodeSelect}\r\n                    className={treeClasses.root}\r\n                    defaultCollapseIcon={<FolderIcon />}\r\n                    defaultExpandIcon={<FolderIcon />}\r\n                    defaultEndIcon={<FolderIcon />}\r\n                    expanded={props.categorys.map((group: TreeViews) => group.id + '')}\r\n                  >\r\n                    <div>\r\n                      {trees.map((category: TreeViews) => {\r\n                        return <Category key={category.id} category={category} />\r\n                      })}\r\n                    </div>\r\n                  </TreeView>\r\n                )}\r\n              </Paper>\r\n            </Container>\r\n            <br></br>\r\n            <br></br>\r\n            <Container maxWidth=\"md\">\r\n              <p style={{ fontSize: \"14pt\" }}>해시태그 입력</p>\r\n              <Paper className={searchStyle.paper}>\r\n                <ChipInput\r\n                  placeholder='태그를 입력하고 엔터'\r\n                  onChange={tagOnChange}\r\n                />\r\n              </Paper>\r\n            </Container>\r\n            <br></br>\r\n            <br></br>\r\n            <Container maxWidth=\"md\">\r\n              <p style={{ fontSize: \"14pt\" }}>* 파일 선택</p>\r\n              <Dropzone\r\n                onChangeStatus={handleChangeStatus}\r\n                inputContent={\"파일을 드래그하거나 클릭해서 업로드 해주세요\"}\r\n                inputWithFilesContent={\"파일 추가\"}\r\n                autoUpload={false}\r\n\r\n              ></Dropzone>\r\n            </Container>\r\n            <br></br>\r\n            <br></br>\r\n            <Container maxWidth=\"md\">\r\n              <Box textAlign='center'>\r\n                <MyButton color=\"blue\" type=\"submit\">등록하기</MyButton>\r\n                <MyButton color=\"red\" onClick={back} >취소</MyButton>\r\n              </Box>\r\n            </Container>\r\n          </form>\r\n        </div>\r\n      </main>\r\n\r\n\r\n      <div>\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{\"등록 실패!\"}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {validation && validation}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              확인\r\n          </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n\r\n    </React.Fragment >\r\n  );\r\n}","import React, { useEffect, } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport BoardRegisterForm from \"../../components/board/BoardRegFormComponent\";\r\nimport * as api from \"../../lib/api\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { fetchCateList, addAttach, addBigAttach } from \"../../modules/boardSaga\";\r\n\r\n//import { addAttach, addBigAttach } from \"../../modules/board\";\r\n\r\nconst BoardRegisterContainer = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { attachments, categorys } = useSelector(({ board }: any) => ({\r\n    attachments: board.attachments,\r\n    categorys: board.categorys\r\n  }));\r\n\r\n  /***\r\n   * 처음 실행됐을 때\r\n   */\r\n  useEffect(() => {\r\n    dispatch(fetchCateList()); // 카테고리 리스트 액션 실행\r\n  }, []);\r\n\r\n\r\n\r\n  /**\r\n   * board db에 저장\r\n   */\r\n  const onRegister = async (title: string, category: string,\r\n    tag: any) => {\r\n    const response = await api.write(title, category, tag);\r\n\r\n    return response;\r\n  };\r\n\r\n\r\n\r\n  /**\r\n   * 일반파일저장\r\n   */\r\n  const onAddAttach = async (file: File, bNo: string, fileLevel: number, fileSize: number) => {\r\n    let formData = new FormData()\r\n    formData.append(\"file\", file)\r\n    formData.append(\"bNo\", bNo)\r\n    formData.append(\"fileLevel\", String(fileLevel))\r\n    formData.append('size', String(fileSize));\r\n    const response = await api.addAttach(formData);\r\n    const attach = response.data;\r\n\r\n    dispatch(addAttach(attach));\r\n  };\r\n\r\n  /**\r\n   * 대용량 파일 저장\r\n   */\r\n  const onAddBigAttach = async (list: Array<any>, bigFileLength: number) => {\r\n    const response = await api.addBigAttach(list, bigFileLength);\r\n    const attach = response;\r\n    dispatch(addBigAttach(attach));\r\n  };\r\n\r\n\r\n  return (\r\n    <BoardRegisterForm\r\n      attachments={attachments}\r\n      onRegister={onRegister}\r\n      onAddAttach={onAddAttach}\r\n      onAddBigAttach={onAddBigAttach}\r\n      categorys={categorys}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(BoardRegisterContainer);\r\n","import React from \"react\";\nimport BoardRegisterContainer from \"../../containers/board/BoardRegContainer\";\nimport MainLayout from \"../../layout/MainLayout\";\n\nfunction BoardRegisterPage() {\n  return (\n    <MainLayout>\n      <BoardRegisterContainer />\n    </MainLayout>\n  );\n}\n\nexport default BoardRegisterPage;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport Button, { ButtonProps as MuiButtonProps } from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { fade, withStyles, Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\n\nimport TableRow from '@material-ui/core/TableRow';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport TreeView from '@material-ui/lab/TreeView';\nimport TreeItem, { TreeItemProps } from '@material-ui/lab/TreeItem';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Input from '@material-ui/core/Input';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport 'react-dropzone-uploader/dist/styles.css'\nimport ChipInput from 'material-ui-chip-input'\nimport '../board/dropzone/styles.css';\n\nimport ReactLoading from 'react-loading';\nimport { arrayToTree } from 'performant-array-to-tree'\nimport TableHead from '@material-ui/core/TableHead';\nimport prettyBytes from 'pretty-bytes';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { setSyntheticTrailingComments } from 'typescript';\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nconst barStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            position: 'fixed',\n            bottom: theme.spacing(2),\n            right: theme.spacing(2),\n        },\n    }),\n);\n\nconst StyledTreeItem = withStyles((theme: Theme) =>\n    createStyles({\n        iconContainer: {\n            '& .close': {\n                opacity: 0.3,\n            },\n        },\n        group: {\n            marginLeft: 7,\n            paddingLeft: 18,\n            borderLeft: `1px dashed ${fade(theme.palette.text.primary, 0.4)}`,\n        },\n    }),\n)((props: TreeItemProps) => <TreeItem {...props} />);\n\nconst useTreeStyles = makeStyles(\n    createStyles({\n        root: {\n            height: 264,\n            flexGrow: 1,\n            maxWidth: 400,\n        },\n    }),\n);\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    heroContent: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 6),\n    },\n    heroButtons: {\n        marginTop: theme.spacing(4),\n    },\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(6),\n    },\n}));\n\n\n\ninterface ButtonProps {\n    color: 'red' | 'blue';\n}\n\n\nconst ButtonStyles = makeStyles({\n    root: {\n        background: (props: ButtonProps) =>\n            props.color === 'red'\n                ? 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\n                : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n        border: 0,\n        borderRadius: 3,\n        boxShadow: (props: ButtonProps) =>\n            props.color === 'red'\n                ? '0 3px 5px 2px rgba(255, 105, 135, .3)'\n                : '0 3px 5px 2px rgba(33, 203, 243, .3)',\n        color: 'white',\n        height: 48,\n        padding: '0 30px',\n        margin: 8,\n    },\n});\n\n\n\nfunction MyButton(props: ButtonProps & Omit<MuiButtonProps, keyof ButtonProps>) {\n    const { color, ...other } = props;\n    const buttonStyle = ButtonStyles(props);\n    return <Button className={buttonStyle.root} {...other} />;\n}\n\nconst useSearchStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        paper: {\n            padding: theme.spacing(2),\n            textAlign: 'center',\n            color: theme.palette.text.secondary,\n        },\n    }),\n);\n\nconst useTableStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n});\n\nexport default function Album(\n    props: any\n) {\n\n    // 파일 정보 테이블\n    function createData(originName: string, fileKinds: string, size: number, fileNo: number) {\n        return { originName, fileKinds, size, fileNo };\n    }\n\n    const [rows, setRows] = useState<any[]>([])\n\n    const tableClasses = useTableStyles();\n    const classes = useStyles();\n    const searchStyle = useSearchStyles();\n\n    const [title, setTitle] = useState('');\n    const [category, setCategory] = useState('');\n\n    interface f {\n        file: File,\n        meta: [],\n    }\n\n    const [file, setFile] = useState<Array<f>>([]);\n    const [tag, setTag] = useState<Array<any>>([]);\n\n    // 처음에\n    useEffect(() => {\n        if (props.boardDetail !== null &&\n            props.boardDetail.fileList.length > 0 &&\n            props.boardDetail.fileList.length > rows.length) {\n            setTitle(props.boardDetail.title);\n\n            props.boardDetail.fileList.map((file: any) => {\n                rows.push(createData(file.originName, file.fileKinds, file.size, file.fileNo));\n            })\n        }\n\n        if (props.tags != null &&\n            props.tags.length > 0) {\n            let temp: any[] = [];\n            for (let i = 0; i < props.tags.length; i++) {\n                temp.push(props.tags[i].tagName);\n            }\n            setTag(temp);\n        }\n    }, [props])\n\n\n    const tagOnChange = useCallback((e) => {\n        setTag(e);\n    }, []);\n\n    const titleOnChange = useCallback((e) => {\n        setTitle(e.target.value);\n    }, []);\n\n    let flag = true;\n\n    const bStyle = barStyles();\n    const handleChangeStatus = ({ meta }: any, status: any) => {\n    }\n    const handleSubmit = (files: any, allFiles: any) => {\n        setFile(allFiles);\n    }\n    const componentConfig = {\n        sending: null,\n    }\n\n    const [loading, setLoading] = useState(false);\n\n    /***\n     * 카테고리~~~~\n     */\n    let trees: any[] = [{}];\n    if (props.categorys != null && props.categorys.length != 0) {\n        const arr = props.categorys;\n        trees = arrayToTree(arr, { dataField: null })\n    }\n    interface TreeViews {\n        children?: TreeViews[];\n        custom: string;\n        id: string;\n    }\n    interface CategoryProps {\n        category: TreeViews\n    }\n    const renderTrees = (nodes: TreeViews) => (\n        <StyledTreeItem key={nodes.id} nodeId={nodes.id} label={nodes.custom}>\n            {Array.isArray(nodes.children) ? nodes.children.map((node) => renderTrees(node)) : null}\n        </StyledTreeItem>\n    );\n    const Category = ({ category }: CategoryProps) => {\n        useEffect(() => {\n\n        }, [category]);\n        return renderTrees(category);\n    }\n    const useTreeStyles = makeStyles({\n        root: {\n            flexGrow: 1,\n            textAlign: 'left',\n        },\n    });\n    const treeClasses = useTreeStyles();\n    const handleToggle = (event: any, nodeIds: string[]) => {\n        event.persist()\n    };\n    //카테고리 선택\n    const handleNodeSelect = (event: any, nodeId: React.SetStateAction<string>) => {\n        setCategory(nodeId);\n    };\n\n\n    /**\n     * 태그~~\n     */\n    const defaultValue: any[] = [];\n    // 기존태그 불러오기\n    if (props.tags.length > 0) {\n        props.tags.map((tag: any) => {\n            defaultValue.push(tag.tagName);\n        })\n    }\n\n    /***\n     * 파일삭제\n     */\n    const [files, setFiles] = useState<number[]>([]);\n    const [deleteFileNo, setDeleteFileNo] = useState(0);\n    const deleteFile = useCallback((fileNo: number) => {\n        handleClickFileOpen();\n        setDeleteFileNo(fileNo);\n\n        // setRows(rows.filter(row => row.fileNo !== fileNo))\n        // setFiles([...files, fileNo]);\n    }, [rows]);\n\n    const dFile = useCallback(() => {\n        setRows(rows.filter(row => row.fileNo !== deleteFileNo))\n        setFiles([...files, deleteFileNo]);\n        handleFileClose();\n    }, [deleteFileNo])\n\n    /**\n     * 수정!!\n     */\n    const [validation, setValidation] = useState(\"\");\n    const fileUpdate = useCallback(async (e) => {\n        e.preventDefault();\n        if (title === \"\") {\n            setValidation(\"제목을 입력해주세요\")\n            handleClickOpen();\n        } else {\n            props.onUpdate(title, category, tag, files);\n        }\n    }, [title, category, tag, files]);\n\n\n    //dialog\n    const [open, setOpen] = React.useState(false);\n    const [fileOpen, setFileOpen] = React.useState(false);\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleClickFileOpen = () => {\n        setFileOpen(true);\n    };\n    const handleFileClose = () => {\n        setFileOpen(false);\n    };\n\n    const selectCancel = () => {\n        document.location.href = \"/board/list\";\n    }\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <Toolbar style={{ display: \"inline\" }} id=\"back-to-top-anchor\" />\n            <main>\n                {loading &&\n                    <>\n                        <div className=\"contentWrap\">\n                            <div style={{\n                                position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\",\n                            }}>\n                                <h2>전송중입니다</h2>\n                                <ReactLoading type=\"spin\" color=\"black\" height={'80%'} width={'80%'} />\n                            </div>\n                        </div>\n                    </>\n                }\n                <div className={classes.cardGrid}>\n                    <Container maxWidth=\"sm\">\n                        <Typography component=\"h1\" variant=\"h3\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                            <b>게시글 수정</b>\n                        </Typography>\n                    </Container>\n                    <form onSubmit={fileUpdate}>\n                        <Container maxWidth=\"md\">\n                            <p style={{ fontSize: \"14pt\" }}>* 제목</p>\n                            <Paper className={searchStyle.paper}>\n                                {!!props.boardDetail &&\n                                    <Input autoFocus fullWidth onChange={titleOnChange} defaultValue={props.boardDetail.title} />\n                                }\n                            </Paper>\n                        </Container>\n                        <br></br>\n                        <br></br>\n                        <Container maxWidth=\"md\">\n                            <p style={{ fontSize: \"14pt\" }}>* 카테고리 선택</p>\n                            <Paper className={searchStyle.paper}>\n                                {!!props.categorys && props.categorys.length > 0 && props.boardDetail && (\n                                    <TreeView\n                                        onNodeToggle={handleToggle}\n                                        defaultSelected={props.boardDetail && String(props.boardDetail.cateId)}\n                                        onNodeSelect={handleNodeSelect}\n                                        className={treeClasses.root}\n                                        defaultCollapseIcon={<FolderIcon />}\n                                        defaultExpandIcon={<FolderIcon />}\n                                        defaultEndIcon={<FolderIcon />}\n                                        multiSelect={false}\n                                        expanded={props.categorys.map((group: TreeViews) => group.id + '')}\n                                    >\n                                        <div>\n                                            {trees.map((category: TreeViews) => {\n                                                return <Category key={category.id} category={category} />\n                                            })}\n                                        </div>\n                                    </TreeView>\n                                )}\n                            </Paper>\n                        </Container>\n                        <br></br>\n                        <br></br>\n                        <Container maxWidth=\"md\">\n                            <p style={{ fontSize: \"14pt\" }}>해시태그 입력</p>\n                            <Paper className={searchStyle.paper}>\n                                <ChipInput\n                                    defaultValue={defaultValue}\n                                    placeholder='태그를 입력하고 엔터'\n                                    onChange={tagOnChange}\n                                />\n                            </Paper>\n                        </Container>\n                        <br></br>\n                        <br></br>\n                        <Container maxWidth=\"md\">\n                            <p style={{ fontSize: \"14pt\" }}>* 파일 선택</p>\n                            <Paper className={searchStyle.paper}>\n                                <TableContainer>\n                                    <Table className={tableClasses.table} size=\"small\" aria-label=\"a dense table\">\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell><b>파일 이름</b></TableCell>\n                                                <TableCell><b>파일 크기</b></TableCell>\n                                                <TableCell><b>삭제</b></TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {rows.map((row) => (\n                                                <TableRow>\n                                                    <TableCell component=\"th\" scope=\"row\">\n                                                        {row.originName}\n                                                    </TableCell>\n                                                    <TableCell>{prettyBytes(row.size)}</TableCell>\n                                                    <TableCell>\n                                                        <div onClick={() => deleteFile(row.fileNo)}><img src=\"https://www.freeiconspng.com/uploads/remove-icon-png-4.png\" width=\"20\" alt=\"Remove Files Free\" /></div>\n                                                    </TableCell>\n                                                </TableRow>\n                                            ))}\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n                            </Paper>\n                        </Container>\n                        <br></br>\n                        <br></br>\n                        <Container maxWidth=\"md\">\n                            <Box textAlign='center'>\n                                <MyButton color=\"blue\" type=\"submit\">수정하기</MyButton>\n                                <MyButton color=\"red\" onClick={selectCancel}>취소</MyButton>\n                            </Box>\n                        </Container>\n                    </form>\n                </div>\n            </main>\n\n\n            <div>\n                <Dialog\n                    open={open}\n                    onClose={handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"수정 실패!\"}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            {validation && validation}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\">\n                            확인\n                </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n\n            <div>\n                <Dialog\n                    open={fileOpen}\n                    onClose={handleFileClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <DialogTitle id=\"alert-dialog-title\">{\"파일 삭제\"}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            해당 파일을 정말 삭제하시겠습니까?\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={dFile} color=\"primary\">\n                            삭제\n                        </Button>\n                        <Button onClick={handleFileClose} color=\"primary\">\n                            취소\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n\n        </React.Fragment>\n    );\n}","import React, { useState, useEffect, useRef, useCallback, useReducer, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport BoardUpdateForm from \"../../components/board/BoardUpdateComponent\";\nimport { fetchOne, fetchCateList, tag } from \"../../modules/boardSaga\";\nimport Cookies from \"js-cookie\";\nimport { withRouter } from \"react-router-dom\";\nimport * as api from \"../../lib/api\";\n\nconst savedToken = Cookies.get(\"accessToken\");\n\nconst BoardUpdateContainer = (bNo: any) => {\n    const dispatch = useDispatch();\n\n    const { boardDetail, myInfo, categorys, tags } = useSelector(({ board, auth, }: any) => ({\n        boardDetail: board.board, // 상세보기\n        myInfo: auth.myInfo, // 내 정보\n        categorys: board.categorys, //카테고리목록\n        tags: board.tag,\n    }));\n\n    /**\n     * 처음 실행됐을 때\n     * board 정보, 카테고리정보\n     */\n    useEffect(() => {\n        dispatch(fetchOne(parseInt(bNo.bNo)));\n        dispatch(fetchCateList()); // 카테고리 리스트 액션 실행\n        dispatch(tag(bNo.bNo)); // 태그\n    }, [dispatch, bNo])\n\n    /**\n     * board 수정\n     */\n    const onUpdate = async (title: string, category: string,\n        tag: string[], file: number[]) => {\n\n        const response = await api.update(bNo.bNo, title, category, tag, file);\n        document.location.href = \"/board/list\";\n        //const response = await api.write(title, category, tag);\n        //return response;\n    };\n\n    return (\n        <BoardUpdateForm\n            onUpdate={onUpdate}\n            boardDetail={boardDetail}\n            myInfo={myInfo}\n            categorys={categorys}\n            tags={tags}\n        />\n    );\n};\n\nexport default BoardUpdateContainer;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport BoardUpdateContainer from \"../../containers/board/BoardUpdateContainer\";\nimport MainLayout from \"../../layout/MainLayout\";\n\ninterface MatchParams {\n    bNo: string\n}\n\nfunction BoardUpdatePage({ match }: RouteComponentProps<MatchParams>) {\n    const { bNo } = match.params;\n    return (\n        <MainLayout>\n            <BoardUpdateContainer bNo={bNo} />\n        </MainLayout>\n    );\n}\n\nexport default BoardUpdatePage;\n","import React, { useState, useCallback, useEffect,useRef } from \"react\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignInForm({ onSignIn,errorMsg }: any) {\r\n\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleChangeUserId = useCallback((e) => {\r\n    setUserId(e.target.value);\r\n  }, []);\r\n\r\n  const handleChangePassword = useCallback((e) => {\r\n    setPassword(e.target.value);\r\n  }, []);\r\n\r\n  const handleSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      onSignIn(userId, password);\r\n      setPassword(\"\");\r\n    },\r\n    [userId, password, onSignIn]\r\n  );\r\n  const classes = useStyles();\r\n\r\n  const idRef = useRef<HTMLElement>()\r\n  const pwdRef = useRef<HTMLElement>()\r\n\r\n  useEffect(() => {\r\n    if(errorMsg!=\"\"){\r\n      if(errorMsg ===\"없는 아이디입니다.\"){\r\n        const currentEl = idRef.current\r\n        currentEl && currentEl.focus();\r\n      }else{\r\n        const currentEl = pwdRef.current\r\n        currentEl && currentEl.focus();\r\n      }\r\n    }\r\n  }, [errorMsg]);\r\n\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          로그인\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"아이디 입력\"\r\n            name=\"email\"\r\n            autoComplete=\"false\"\r\n            autoFocus\r\n            value={userId}\r\n            onChange={handleChangeUserId}\r\n            inputRef = {idRef}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"비밀번호 입력\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"false\"\r\n            value={password}\r\n            onChange={handleChangePassword}\r\n            inputRef = {pwdRef}\r\n          />\r\n          <div style={{color:\"hotpink\"}}>\r\n            {errorMsg && errorMsg}\r\n          </div>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            로그인\r\n          </Button>\r\n        </form>\r\n      </div>\r\n\r\n    </Container>\r\n  );\r\n}","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SignInForm from \"../../pages/home/login\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { checkMyInfo, login } from \"../../modules/auth\";\r\n\r\n\r\nconst SignInContainer = ({ history }: any) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { accessToken, myInfo,errorMsg } = useSelector(({ auth }: any) => ({\r\n    accessToken: auth.accessToken,\r\n    myInfo: auth.myInfo,\r\n    errorMsg:auth.errorMsg\r\n  }));\r\n\r\n  const onSignIn = (userId: string, password: string) => {\r\n    try {\r\n      dispatch(login({ userId, password }));\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    \r\n  }, [errorMsg, dispatch]);\r\n\r\n\r\n  useEffect(() => {\r\n      if (accessToken) {\r\n        dispatch(checkMyInfo());\r\n      }\r\n  }, [accessToken, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (myInfo) {\r\n      document.location.href = \"/board/list\";\r\n    }\r\n  }, [myInfo, history]);\r\n\r\n  return <SignInForm onSignIn={onSignIn} errorMsg={errorMsg}/>;\r\n};\r\n\r\nexport default withRouter(SignInContainer);\r\n","import React from \"react\";\r\nimport SignInContainer from \"../../containers/auth/SignInContainer\";\r\n\r\n\r\nfunction SignInPage() {\r\n  return (\r\n      <SignInContainer />\r\n  );\r\n}\r\n\r\nexport default SignInPage;\r\n","import * as React from 'react';\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport BoardList from '../pages/board/list';\r\nimport BoardRegForm from '../pages/board/regForm';\r\nimport BoardDetail from '../pages/board/detail';\r\nimport BoardUpdate from '../pages/board/update';\r\nimport LoginPage from '../pages/auth/SignInPage';\r\n\r\nexport const RouterPaths = {\r\n  login: '/loginPage',\r\n  boardList: '/board/list',\r\n  boardRegForm: '/board/regForm',\r\n  boardUpdate: '/board/update/:bNo',\r\n};\r\n\r\nconst Root: React.FC = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route path=\"/\" exact component={LoginPage} />\r\n      <Route path={`${RouterPaths.login}`} exact component={LoginPage} />\r\n      <Route path={`${RouterPaths.boardList}`} exact component={BoardList} />\r\n      <Route path={`${RouterPaths.boardRegForm}`} exact component={BoardRegForm} />\r\n      <Route path={`${RouterPaths.boardUpdate}`} exact component={BoardUpdate} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n)\r\n\r\n// const Root: React.FC = () => (\r\n//   <BrowserRouter>\r\n//     <Switch>\r\n//       <Route path=\"/\" exact component={LoginPage} />\r\n//       <Route path=\"/loginPage\" exact component={LoginPage} />\r\n//       <Route path=\"/board/list\" component={BoardList} />\r\n//       <Route path=\"/board/regForm\" component={BoardRegForm} />\r\n//       <Route path=\"/board/update/:bNo\" component={BoardUpdate} />\r\n//     </Switch>\r\n//   </BrowserRouter>\r\n// )\r\n\r\nexport default Root;","import { createAction, handleActions } from \"redux-actions\";\nimport { takeLatest } from \"redux-saga/effects\";\nimport {categoryList} from \"../lib/api\";\nimport createRequestSaga from \"../lib/createRequestSaga\";\n\nexport const FETCH_CATE_LIST = \"category/FETCH_CATE_LIST\";\nconst FETCH_CATE_LIST_SUCCESS = \"category/FETCH_CATE_LIST_SUCCESS\";\nconst FETCH_CATE_LIST_FAILURE = \"category/FETCH_CATE_LIST_FAILURE\";\n\nexport const fetchCateList = createAction(FETCH_CATE_LIST);\n\n\nconst fetchCateListSaga = createRequestSaga(FETCH_CATE_LIST, categoryList);\n\nexport function* categorySaga() {\n  yield takeLatest(FETCH_CATE_LIST, fetchCateListSaga);\n}\n\nconst initialState = {\n  error: null,\n  categorys:[]\n};\n\n\nconst category = handleActions(\n  {\n    [FETCH_CATE_LIST]: (state:any) => ({\n      ...state,\n      categorys:[]\n    }),\n    [FETCH_CATE_LIST_SUCCESS]: (state, action) => ({\n      ...state,\n      categorys: action.payload,\n    }),\n    [FETCH_CATE_LIST_FAILURE]: (state, action) => ({\n      ...state,\n      error: action.payload,\n    }),\n  },\n  initialState\n);\n\n\nexport default category;\n","import { combineReducers } from \"redux\";\r\nimport { all } from \"redux-saga/effects\";\r\nimport auth, { authSaga } from \"./auth\";\r\nimport category, { categorySaga } from \"./category\";\r\nimport board, { boardSaga } from \"./boardSaga\";\r\nimport loading from \"./loading\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth,\r\n  category,\r\n  loading,\r\n  board,\r\n});\r\n\r\nexport function* rootSaga() {\r\n  yield all([\r\n    authSaga(),\r\n    categorySaga(),\r\n    boardSaga(),\r\n  ]);\r\n}\r\n\r\nexport default rootReducer;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Route from \"./routes/index\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer, { rootSaga } from \"./modules\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport Cookies from \"js-cookie\";\nimport { setAccessToken, checkMyInfo } from \"./modules/auth\";\nimport client from \"./lib/client\";\nimport * as serviceWorker from './serviceWorker';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\nsagaMiddleware.run(rootSaga);\n\nfunction loadUser() {\n  try {\n    const savedToken = Cookies.get(\"accessToken\");\n\n    if (!savedToken) return;\n\n    store.dispatch(setAccessToken(savedToken));\n\n    client.defaults.headers.common.Authorization = `Bearer ${savedToken}`;\n\n    store.dispatch(checkMyInfo());\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nloadUser();\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Route />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();"],"sourceRoot":""}